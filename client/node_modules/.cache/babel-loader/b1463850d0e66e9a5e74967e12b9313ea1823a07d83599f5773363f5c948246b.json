{"ast":null,"code":"var _jsxFileName = \"/Users/stanleymui/pa04-crispy/client/src/components/tagpage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SearchBar from './searchbar';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagPageContent = ({\n  tags,\n  questions,\n  setHomePageVisible,\n  setAskQuestionPageVisible,\n  setTagPageVisible,\n  setFilteredTag,\n  setAnswerPageVisible,\n  setSearchString,\n  setSearch\n}) => {\n  _s();\n  const handleQuestionsClick = () => {\n    setHomePageVisible(true);\n    setAskQuestionPageVisible(false);\n    setTagPageVisible(false);\n    setAnswerPageVisible(false);\n    setSearch(false);\n    setFilteredTag([]);\n  };\n  const handleTagsClick = () => {\n    setHomePageVisible(false);\n    setTagPageVisible(true);\n    setAnswerPageVisible(false);\n    setSearch(false);\n    setFilteredTag([]);\n  };\n  const toggleSearch = searchString => {\n    setFilteredTag([]);\n    setAskQuestionPageVisible(false);\n    setTagPageVisible(false);\n    setAnswerPageVisible(false);\n    setSearchString(searchString);\n    setSearch(true);\n    setHomePageVisible(true);\n  };\n  const [numTags, setNumTags] = useState(0);\n  useEffect(() => {\n    // Define printTags function inside the useEffect\n    const printTags = () => {\n      // Get the container element\n      var container = document.getElementById('tag-container');\n      // Iterate through the tags array\n      for (let i = 0; i < tags.length; i++) {\n        const tag = tags[i];\n        // Create a new div element for the tag\n        const tagElement = document.createElement('div');\n        tagElement.classList.add('tag');\n\n        // Create a new anchor element for the tag name\n        const tagLink = document.createElement('a');\n        tagLink.href = '#'; //can also be button\n        tagLink.textContent = tag.name; // Set the text content of the tag link with the tag name\n\n        // Attach click event listener to the tag name link\n        (function (tagName) {\n          tagLink.addEventListener('click', function (event) {\n            event.preventDefault(); // Prevent the default action of anchor click\n\n            // Retrieve all questions associated with the clicked tag name\n            var questionsWithTag = questions.filter(question => {\n              // Check if any of the question's tag IDs match the clicked tag _id\n              return question.tags.some(tagId => {\n                // Find the tag object in the tags array using the tag ID\n                var tag = tags.find(tag => tag._id === tagId);\n                // Check if the tag exists and its name matches\n                return tag && tag.name === tagName;\n              });\n            });\n            setFilteredTag(questionsWithTag);\n            setHomePageVisible(true);\n            setTagPageVisible(false);\n            setAnswerPageVisible(false);\n            setAskQuestionPageVisible(false);\n          });\n        })(tag.name);\n\n        // Count the number of questions with the current tag\n        let questionCount = 0;\n        questions.forEach(item => {\n          if (item.tags.includes(tag._id)) {\n            questionCount++;\n          }\n        });\n\n        // Create a new div element for the question count\n        var questionCountDiv = document.createElement('div');\n        questionCountDiv.textContent = `${questionCount} question${questionCount === 1 ? '' : 's'}`;\n\n        // Append the tag link to the tag element\n        tagElement.appendChild(tagLink);\n\n        // Append the tag element to the container\n        container.appendChild(tagElement);\n        tagElement.appendChild(questionCountDiv);\n\n        // Add a line break after every third tag\n        if ((i + 1) % 3 === 0) {\n          container.appendChild(document.createElement('br'));\n        }\n      }\n    };\n\n    // Update the number of tags\n    setNumTags(tags.length);\n    printTags();\n  }, [tags, questions, setFilteredTag, setHomePageVisible, setTagPageVisible, setAnswerPageVisible, setAskQuestionPageVisible]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"figure3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-stack\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            width: '85%',\n            fontSize: '50px',\n            textAlign: 'center'\n          },\n          children: \" FakeStackOverflow \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: toggleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-side-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hyperlinkButton\",\n          onClick: handleQuestionsClick,\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"active hyperlinkButton\",\n          onClick: handleTagsClick,\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main-body-figure3\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"num-tags\",\n          style: {\n            marginLeft: '60px',\n            marginTop: '60px'\n          },\n          children: [numTags, \" \", numTags === 1 ? 'tag' : 'tags']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"All-Tags\",\n          children: \"All Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            float: 'right',\n            marginRight: '60px',\n            marginTop: '-50px'\n          },\n          className: \"button1\",\n          onClick: () => {\n            setHomePageVisible(false);\n            setAskQuestionPageVisible(true);\n            setTagPageVisible(false);\n            setAnswerPageVisible(false);\n          },\n          children: \"Ask Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"tag-container\",\n          style: {\n            maxHeight: \"73vh\",\n            overflow: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n_s(TagPageContent, \"ykrGPYfuEghMDm9Lc1RmDwbRuIE=\");\n_c = TagPageContent;\nexport default TagPageContent;\nvar _c;\n$RefreshReg$(_c, \"TagPageContent\");","map":{"version":3,"names":["React","SearchBar","useState","useEffect","jsxDEV","_jsxDEV","TagPageContent","tags","questions","setHomePageVisible","setAskQuestionPageVisible","setTagPageVisible","setFilteredTag","setAnswerPageVisible","setSearchString","setSearch","_s","handleQuestionsClick","handleTagsClick","toggleSearch","searchString","numTags","setNumTags","printTags","container","document","getElementById","i","length","tag","tagElement","createElement","classList","add","tagLink","href","textContent","name","tagName","addEventListener","event","preventDefault","questionsWithTag","filter","question","some","tagId","find","_id","questionCount","forEach","item","includes","questionCountDiv","appendChild","id","children","className","style","width","fontSize","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onClick","marginLeft","marginTop","float","marginRight","maxHeight","overflow","_c","$RefreshReg$"],"sources":["/Users/stanleymui/pa04-crispy/client/src/components/tagpage.js"],"sourcesContent":["import React from 'react';\nimport SearchBar from './searchbar';\nimport {useState, useEffect } from 'react';\n\nconst TagPageContent = ({ tags, questions, setHomePageVisible, setAskQuestionPageVisible, setTagPageVisible, setFilteredTag, setAnswerPageVisible, setSearchString, setSearch}) => {\n    const handleQuestionsClick = () => {\n        setHomePageVisible(true);\n        setAskQuestionPageVisible(false);\n        setTagPageVisible(false);\n        setAnswerPageVisible(false);\n        setSearch(false);\n        setFilteredTag([]);\n    };\n\n    const handleTagsClick = () => {\n        setHomePageVisible(false);\n        setTagPageVisible(true);\n        setAnswerPageVisible(false);\n        setSearch(false);\n        setFilteredTag([]);\n    };\n\n    const toggleSearch = (searchString) => {\n        setFilteredTag([]);\n        setAskQuestionPageVisible(false);\n        setTagPageVisible(false);\n        setAnswerPageVisible(false);    \n        setSearchString(searchString);\n        setSearch(true);\n        setHomePageVisible(true);\n    };\n\n    const [numTags, setNumTags] = useState(0);\n\n\n    useEffect(() => {\n        // Define printTags function inside the useEffect\n        const printTags = () => {\n            // Get the container element\n            var container = document.getElementById('tag-container');\n            // Iterate through the tags array\n            for (let i = 0; i < tags.length; i++) {\n                const tag = tags[i];\n                // Create a new div element for the tag\n                const tagElement = document.createElement('div');\n                tagElement.classList.add('tag');\n    \n                // Create a new anchor element for the tag name\n                const tagLink = document.createElement('a');\n                tagLink.href = '#'; //can also be button\n                tagLink.textContent = tag.name; // Set the text content of the tag link with the tag name\n    \n                // Attach click event listener to the tag name link\n                (function (tagName) {\n                    tagLink.addEventListener('click', function (event) {\n                        event.preventDefault(); // Prevent the default action of anchor click\n                            \n                        // Retrieve all questions associated with the clicked tag name\n                        var questionsWithTag = questions.filter(question => {\n                            // Check if any of the question's tag IDs match the clicked tag _id\n                            return question.tags.some(tagId => {\n                                // Find the tag object in the tags array using the tag ID\n                                var tag = tags.find(tag => tag._id === tagId);\n                                // Check if the tag exists and its name matches\n                                return tag && tag.name === tagName;\n                            });\n                        });\n                        setFilteredTag(questionsWithTag)\n                        setHomePageVisible(true)\n                        setTagPageVisible(false)\n                        setAnswerPageVisible(false)\n                        setAskQuestionPageVisible(false)\n                    });\n                })(tag.name);\n                \n                // Count the number of questions with the current tag\n                let questionCount = 0\n                questions.forEach(item => {\n                    if (item.tags.includes(tag._id)) {\n                        questionCount++;\n                    }\n                });\n    \n                // Create a new div element for the question count\n                var questionCountDiv = document.createElement('div');\n                questionCountDiv.textContent = `${questionCount} question${questionCount === 1 ? '' : 's'}`;\n    \n                // Append the tag link to the tag element\n                tagElement.appendChild(tagLink);\n    \n                // Append the tag element to the container\n                container.appendChild(tagElement);\n                tagElement.appendChild(questionCountDiv);\n    \n                // Add a line break after every third tag\n                if ((i + 1) % 3 === 0) {\n                    container.appendChild(document.createElement('br'));\n                }\n            }\n        };\n    \n        // Update the number of tags\n        setNumTags(tags.length);\n        printTags();\n    }, [tags, questions, setFilteredTag, setHomePageVisible, setTagPageVisible, setAnswerPageVisible, setAskQuestionPageVisible]);\n\n    return (\n        <div id=\"figure3\">\n            <div className=\"grid-container\">\n                <div className=\"header-stack\">\n                    <h1 style={{ width: '85%', fontSize: '50px', textAlign: 'center' }}> FakeStackOverflow </h1>\n                    <SearchBar onSearch={toggleSearch} />\n                </div>\n                <div className=\"left-side-bar\">\n                   <button className={\"hyperlinkButton\"} onClick={handleQuestionsClick}>Questions</button>\n                   <button className={\"active hyperlinkButton\"} onClick={handleTagsClick}>Tags</button>\n                </div>\n                <div id=\"main-body-figure3\">\n                   <p id=\"num-tags\" style={{ marginLeft: '60px', marginTop: '60px' }}>{numTags} {numTags === 1 ? 'tag' : 'tags'}</p>\n                   <p id=\"All-Tags\">All Tags</p>\n                   <button style={{ float: 'right', marginRight: '60px', marginTop: '-50px' }} className=\"button1\" onClick={() => { setHomePageVisible(false); setAskQuestionPageVisible(true); setTagPageVisible(false); setAnswerPageVisible(false); }}>Ask Questions</button>\n                   <br></br>\n                   <div id=\"tag-container\" style={{maxHeight:\"73vh\", overflow:\"auto\"}}></div>\n               </div>\n            </div>\n        </div>\n    );\n};\nexport default TagPageContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}