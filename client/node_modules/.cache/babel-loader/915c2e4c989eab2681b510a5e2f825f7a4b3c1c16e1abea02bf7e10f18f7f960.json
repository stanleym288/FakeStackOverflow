{"ast":null,"code":"var _jsxFileName = \"/Users/stanleymui/pa04-crispy/client/src/components/newquestion.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SearchBar from './searchbar.js';\nimport axios from 'axios';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewQuestionPageContent = ({\n  setAnswers,\n  setTags,\n  currentNewQuestionClicked,\n  setCurrentNewQuestionClicked,\n  reputation,\n  usernameDisplay,\n  username,\n  setProfilePage,\n  setNewQuestionPage,\n  setWelcomePage,\n  setFilteredTag,\n  setAskQuestionPageVisible,\n  setTagPageVisible,\n  setAnswerPageVisible,\n  setHomePageVisible,\n  setQuestions,\n  tags,\n  setSearch,\n  setSearchString\n}) => {\n  _s();\n  const [questionTitle, setQuestionTitle] = useState(currentNewQuestionClicked.title);\n  const [questionText, setQuesitonText] = useState(currentNewQuestionClicked.text);\n  const [questionTags, setQuesitonTags] = useState('');\n  const [questionSummary, setQuestionSummary] = useState(currentNewQuestionClicked.summary);\n  useEffect(() => {\n    axios.get('http://localhost:8000/gettags', {\n      params: {\n        tags: currentNewQuestionClicked.tags\n      }\n    }).then(res => {\n      setQuesitonTags(res.data);\n    }).catch(error => {\n      console.error('Error fetching createdBy:', error);\n    });\n  }, [currentNewQuestionClicked.tags]);\n  const handleQuestionsClick = () => {\n    setHomePageVisible(true);\n    setAnswerPageVisible(false);\n    setAskQuestionPageVisible(false);\n    setTagPageVisible(false);\n    setSearch(false);\n    setFilteredTag([]);\n    setNewQuestionPage(false);\n  };\n  const handleTagsClick = () => {\n    setTagPageVisible(true);\n    setHomePageVisible(false);\n    setAnswerPageVisible(false);\n    setAskQuestionPageVisible(false);\n    setSearch(false);\n    setFilteredTag([]);\n    setNewQuestionPage(false);\n  };\n  const toggleSearch = searchString => {\n    setFilteredTag([]);\n    setSearchString(searchString);\n    setSearch(true);\n    setHomePageVisible(true);\n  };\n  const toggleSignOut = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:8000/logout');\n    } catch (error) {\n      alert(\"Sign Out Unsuccessful\");\n      return;\n    }\n    setNewQuestionPage(false);\n    setWelcomePage(true);\n    setCurrentNewQuestionClicked([]);\n    window.location.reload();\n  };\n  const handleProfilePage = () => {\n    setNewQuestionPage(false);\n    setProfilePage(true);\n  };\n  const newTitle = event => {\n    setQuestionTitle(event.target.value);\n  };\n  const newSummary = event => {\n    setQuestionSummary(event.target.value);\n  };\n  const newText = event => {\n    setQuesitonText(event.target.value);\n  };\n  const newTags = event => {\n    setQuesitonTags(event.target.value);\n  };\n  const deleteQuestion = async e => {\n    e.preventDefault();\n    let questionId = currentNewQuestionClicked._id;\n    let questionAnswers = currentNewQuestionClicked.answers;\n    let questionComments = currentNewQuestionClicked.comments;\n    try {\n      const response = await axios.post('http://localhost:8000/deletequestion', {\n        questionId,\n        questionAnswers,\n        questionComments\n      });\n      const updatedQuestions = response.data.questions;\n      const updatedAnswers = response.data.answers;\n      setQuestions(updatedQuestions);\n      setAnswers(updatedAnswers);\n    } catch (error) {\n      console.error('Error adding question client:', error);\n      return;\n    }\n    setNewQuestionPage(false);\n    setHomePageVisible(true);\n  };\n  const updateQuestion = async e => {\n    e.preventDefault();\n    let title = questionTitle.toLowerCase();\n    let text = questionText.toLowerCase();\n    let tag = questionTags.toLowerCase();\n    let summary = questionSummary.toLowerCase();\n    var taglist = tag.split(\" \");\n\n    // remove duplicates\n    taglist = taglist.filter((tag, index) => taglist.indexOf(tag) === index);\n\n    // remove empty strings\n    taglist = taglist.filter(item => item !== \"\");\n\n    // check if title is zero or over 100 characters\n    var error = 0;\n    if (title.length === 0 || title.length > 50) {\n      error += 1;\n    }\n    if (summary.length === 0 || summary.length > 140) {\n      error += 1;\n    }\n\n    // check if the text box is empty\n    if (text.length === 0) {\n      error += 1;\n    }\n    // obtain hypertext in the text\n    let hypertextarray = text.match(/(\\[.*?\\]\\(.*?\\))/g);\n\n    // if the hypertext exists\n    if (hypertextarray) {\n      for (let i = 0; i < hypertextarray.length; i++) {\n        let match = hypertextarray[i].match(/\\[(.*?)\\]\\((.*?)\\)/);\n        let bracketText = match[1];\n        let parentesesText = match[2];\n        if (bracketText.length === 0) {\n          error += 1;\n        }\n\n        //check for invaild links\n        if (parentesesText.length === 0) {\n          error += 1;\n        }\n        if (parentesesText.startsWith(\"http://\") || parentesesText.startsWith(\"https://\")) {} else {\n          error += 1;\n        }\n      }\n    }\n\n    // check if the taglist is invalid\n    if (taglist.length > 5) {\n      error += 1;\n    } else if (taglist.length === 0) {\n      error += 1;\n    } else {\n      for (var i = 0; i < taglist.length; i++) {\n        if (taglist[i].length > 20) {\n          error += 1;\n        }\n      }\n    }\n    const invalidTags = taglist.filter(tag => !tags.some(existingTag => existingTag.name === tag));\n    if (invalidTags.length > 0) {\n      if (reputation < 50) {\n        error += 1;\n      }\n    }\n\n    // if there are any errors return\n    if (error > 0) {\n      return;\n    }\n\n    // edit the tags to remove user\n    let originalTags = currentNewQuestionClicked.tags;\n    let arrayofTags = [];\n    try {\n      const response = await axios.post('http://localhost:8000/updatetags', {\n        originalTags,\n        username\n      });\n      arrayofTags = response.data;\n    } catch (error) {\n      console.error('Error adding question client:', error);\n      return;\n    }\n    console.log(\"this is reached\");\n    let listofnamemymodel = [];\n    let newTagIds = [];\n    for (let i = 0; i < arrayofTags.length; i++) {\n      listofnamemymodel.push(arrayofTags[i].name);\n    }\n    let currentListofTags;\n    for (let i = 0; i < taglist.length; i++) {\n      if (listofnamemymodel.includes(taglist[i])) {\n        // if the tag is already in the mymodel tag\n        newTagIds.push(arrayofTags[listofnamemymodel.indexOf(taglist[i])]._id); // push the id number\n        let tagId = arrayofTags[listofnamemymodel.indexOf(taglist[i])]._id;\n        try {\n          const response = await axios.post('http://localhost:8000/addtaguser', {\n            tagId,\n            username\n          });\n          const updatedTags = response.data;\n          currentListofTags = updatedTags;\n          setTags(updatedTags);\n        } catch (error) {\n          console.error('Error adding question client:', error);\n          return;\n        }\n      } else {\n        // update the model and push the new id tag\n        let name = taglist[i];\n        try {\n          const response = await axios.post('http://localhost:8000/addtag', {\n            name,\n            username\n          });\n          const updatedTags = response.data;\n          currentListofTags = updatedTags;\n          setTags(updatedTags);\n        } catch (error) {\n          console.error('Error adding question client:', error);\n          return;\n        }\n        console.log(\"tag after post question new array\", currentListofTags);\n        let newTag = currentListofTags[currentListofTags.length - 1];\n        newTagIds.push(newTag._id);\n        console.log(\"this is the id of the tag\", newTag._id);\n      }\n    }\n    // update the new question with tags\n    let questionId = currentNewQuestionClicked._id;\n    try {\n      const response = await axios.post('http://localhost:8000/updateQuestion', {\n        questionId,\n        title,\n        text,\n        newTagIds,\n        summary\n      });\n      const updatedQuestion = response.data;\n      setQuestions(updatedQuestion);\n    } catch (error) {\n      console.error('Error adding question client:', error);\n      return;\n    }\n    setNewQuestionPage(false);\n    setHomePageVisible(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-stack\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          width: '50%',\n          fontSize: '50px',\n          textAlign: 'center'\n        },\n        children: \" FakeStackOverflow \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginTop: '65px',\n          marginRight: '20px'\n        },\n        children: [\"Hello, \", usernameDisplay]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), username !== \"Guest\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hyperlinkButton\",\n          onClick: handleProfilePage,\n          style: {\n            marginRight: \"6px\"\n          },\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hyperlinkButton\",\n          onClick: toggleSignOut,\n          style: {\n            width: '80px',\n            marginRight: '100px'\n          },\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hyperlinkButton\",\n        onClick: toggleSignOut,\n        style: {\n          width: '100px',\n          marginRight: '100px'\n        },\n        children: \"Sign in/Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: toggleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hyperlinkButton\",\n        onClick: handleQuestionsClick,\n        children: \"Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hyperlinkButton\",\n        onClick: handleTagsClick,\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-side-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"17%\",\n          display: \"flex\",\n          borderBottom: \"solid\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"50%\",\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              margin: \"6%\"\n            },\n            onClick: updateQuestion,\n            children: \"Update Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"50%\",\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              margin: \"6%\"\n            },\n            onClick: deleteQuestion,\n            children: \"Delete Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '20px',\n          height: '60vh',\n          maxHeight: '60vh',\n          overflow: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '75%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginLeft: '40px',\n                color: 'red',\n                fontFamily: 'Helvetica'\n              },\n              children: \"*Indicates mandatory fields\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: '25px',\n              marginLeft: '70px',\n              marginTop: '0px',\n              marginBottom: '0px'\n            },\n            children: \" Question Title* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              fontSize: '15px',\n              marginLeft: '70px'\n            },\n            children: \"Limit title to 50 characters or less\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 117\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              fontFamily: \"'Times New Roman', Times, serif\"\n            },\n            id: \"questionTitle\",\n            value: questionTitle,\n            onChange: newTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorTitle, {\n            questionTitle: questionTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: '25px',\n              marginLeft: '70px',\n              marginTop: '0px',\n              marginBottom: '0px'\n            },\n            children: \" Question Summary* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              fontSize: '15px',\n              marginLeft: '70px'\n            },\n            children: \"Limit title to 140 characters or less\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 118\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            style: {\n              fontFamily: \"'Times New Roman', Times, serif\"\n            },\n            id: \"questionText\",\n            value: questionSummary,\n            onChange: newSummary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorSummary, {\n            questionSummary: questionSummary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: '25px',\n              marginLeft: '70px',\n              marginTop: '0px',\n              marginBottom: '0px'\n            },\n            children: \" Question Text* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              fontSize: '15px',\n              marginLeft: '70px'\n            },\n            children: \"Add details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 92\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            style: {\n              fontFamily: \"'Times New Roman', Times, serif\"\n            },\n            id: \"questionText\",\n            value: questionText,\n            onChange: newText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n            questionText: questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: '25px',\n              marginLeft: '70px',\n              marginTop: '0px',\n              marginBottom: '0px'\n            },\n            children: \" Tags* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              fontSize: '15px',\n              marginLeft: '70px'\n            },\n            children: \"Add Keywords separated by whitespace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 117\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              fontFamily: \"'Times New Roman', Times, serif\"\n            },\n            id: \"tags\",\n            value: questionTags,\n            onChange: newTags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorTags, {\n            questionTags: questionTags,\n            reputation: reputation,\n            tags: tags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 9\n  }, this);\n};\n_s(NewQuestionPageContent, \"VpxukiBwYhIH+Rt98TBikm4Dt1Q=\");\n_c = NewQuestionPageContent;\nconst ErrorTitle = ({\n  questionTitle\n}) => {\n  if (questionTitle.length === 0 || questionTitle.length > 50) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Invalid Title Length\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 16\n    }, this);\n  }\n};\n_c2 = ErrorTitle;\nconst ErrorSummary = ({\n  questionSummary\n}) => {\n  if (questionSummary.length === 0 || questionSummary.length > 140) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Invalid Summary Length\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 16\n    }, this);\n  }\n};\n_c3 = ErrorSummary;\nconst ErrorText = ({\n  questionText\n}) => {\n  if (questionText.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Invalid Text Length\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 16\n    }, this);\n  }\n\n  // obtain hypertext in the text\n  let hypertextarray = questionText.match(/(\\[.*?\\]\\(.*?\\))/g);\n\n  // if the hypertext exists\n  if (hypertextarray) {\n    for (let i = 0; i < hypertextarray.length; i++) {\n      let match = hypertextarray[i].match(/\\[(.*?)\\]\\((.*?)\\)/);\n      let bracketText = match[1];\n      let parentesesText = match[2];\n      if (bracketText.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \" Invalid Bracket Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 24\n        }, this);\n      }\n\n      //check for invaild links\n      if (parentesesText.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \" Invalid Link \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 24\n        }, this);\n      }\n      if (parentesesText.startsWith(\"http://\") || parentesesText.startsWith(\"https://\")) {\n        return;\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \" Invalid Link \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }\n};\n_c4 = ErrorText;\nconst ErrorTags = ({\n  questionTags,\n  reputation,\n  tags\n}) => {\n  let tag = questionTags.toLowerCase();\n  var taglist = tag.split(\" \");\n\n  // remove duplicates\n  taglist = taglist.filter((tag, index) => taglist.indexOf(tag) === index);\n\n  // remove empty strings\n  taglist = taglist.filter(item => item !== \"\");\n  if (taglist.length > 5) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Too Many Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 16\n    }, this);\n  } else if (taglist.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"There Must be at Least 1 Tag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 16\n    }, this);\n  } else {\n    for (let i = 0; i < taglist.length; i++) {\n      if (taglist[i].length > 20) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"Tag is Too Long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }\n\n  // Check if any tag added by the user doesn't exist in the 'tags' array\n  const invalidTags = taglist.filter(tag => !tags.some(existingTag => existingTag.name === tag));\n  if (invalidTags.length > 0) {\n    if (reputation < 50) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: \"Reputation below 50, can not add new tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 20\n      }, this);\n    }\n  }\n};\n_c5 = ErrorTags;\nexport default NewQuestionPageContent;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"NewQuestionPageContent\");\n$RefreshReg$(_c2, \"ErrorTitle\");\n$RefreshReg$(_c3, \"ErrorSummary\");\n$RefreshReg$(_c4, \"ErrorText\");\n$RefreshReg$(_c5, \"ErrorTags\");","map":{"version":3,"names":["React","SearchBar","axios","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","NewQuestionPageContent","setAnswers","setTags","currentNewQuestionClicked","setCurrentNewQuestionClicked","reputation","usernameDisplay","username","setProfilePage","setNewQuestionPage","setWelcomePage","setFilteredTag","setAskQuestionPageVisible","setTagPageVisible","setAnswerPageVisible","setHomePageVisible","setQuestions","tags","setSearch","setSearchString","_s","questionTitle","setQuestionTitle","title","questionText","setQuesitonText","text","questionTags","setQuesitonTags","questionSummary","setQuestionSummary","summary","get","params","then","res","data","catch","error","console","handleQuestionsClick","handleTagsClick","toggleSearch","searchString","toggleSignOut","e","preventDefault","post","alert","window","location","reload","handleProfilePage","newTitle","event","target","value","newSummary","newText","newTags","deleteQuestion","questionId","_id","questionAnswers","answers","questionComments","comments","response","updatedQuestions","questions","updatedAnswers","updateQuestion","toLowerCase","tag","taglist","split","filter","index","indexOf","item","length","hypertextarray","match","i","bracketText","parentesesText","startsWith","invalidTags","some","existingTag","name","originalTags","arrayofTags","log","listofnamemymodel","newTagIds","push","currentListofTags","includes","tagId","updatedTags","newTag","updatedQuestion","className","children","style","width","fontSize","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","marginRight","onClick","onSearch","height","display","borderBottom","margin","maxHeight","overflow","marginLeft","color","fontFamily","marginBottom","id","onChange","ErrorTitle","ErrorSummary","ErrorText","ErrorTags","_c","_c2","_c3","_c4","_c5","$RefreshReg$"],"sources":["/Users/stanleymui/pa04-crispy/client/src/components/newquestion.js"],"sourcesContent":["import React from 'react';\nimport SearchBar from './searchbar.js';\nimport axios from 'axios';\nimport { useState, useEffect } from \"react\";\n\n\nconst NewQuestionPageContent = ({ setAnswers, setTags, currentNewQuestionClicked, setCurrentNewQuestionClicked, reputation, usernameDisplay, username, setProfilePage, setNewQuestionPage, setWelcomePage, setFilteredTag, setAskQuestionPageVisible, setTagPageVisible, setAnswerPageVisible, setHomePageVisible, setQuestions, tags, setSearch, setSearchString }) => {\n    const [questionTitle, setQuestionTitle] = useState(currentNewQuestionClicked.title);\n    const [questionText, setQuesitonText] = useState(currentNewQuestionClicked.text);\n    const [questionTags, setQuesitonTags] = useState('');\n    const [questionSummary, setQuestionSummary] = useState(currentNewQuestionClicked.summary);\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/gettags', { params: { tags: currentNewQuestionClicked.tags } })\n            .then(res => {\n                setQuesitonTags(res.data)\n            }).catch(error => {\n                console.error('Error fetching createdBy:', error);\n            });\n    }, [currentNewQuestionClicked.tags]);\n\n    const handleQuestionsClick = () => {\n        setHomePageVisible(true);\n        setAnswerPageVisible(false);\n        setAskQuestionPageVisible(false);\n        setTagPageVisible(false);\n        setSearch(false);\n        setFilteredTag([]);\n        setNewQuestionPage(false);\n    };\n\n    const handleTagsClick = () => {\n        setTagPageVisible(true);\n        setHomePageVisible(false);\n        setAnswerPageVisible(false);\n        setAskQuestionPageVisible(false);\n        setSearch(false);\n        setFilteredTag([]);\n        setNewQuestionPage(false);\n    };\n\n    const toggleSearch = (searchString) => {\n        setFilteredTag([]);\n        setSearchString(searchString);\n        setSearch(true);\n        setHomePageVisible(true);\n      };\n    \n    const toggleSignOut = async (e) => {\n        e.preventDefault();\n        try {\n            await axios.post('http://localhost:8000/logout')\n        } catch (error) {\n            alert(\"Sign Out Unsuccessful\")\n            return;\n        }\n        setNewQuestionPage(false);\n        setWelcomePage(true);\n        setCurrentNewQuestionClicked([]);\n        window.location.reload();\n    };\n\n    const handleProfilePage = () => {\n        setNewQuestionPage(false);\n        setProfilePage(true);\n    };\n\n    const newTitle = (event) => {\n        setQuestionTitle(event.target.value);\n    }\n\n    const newSummary = (event) => {\n        setQuestionSummary(event.target.value)\n    }\n\n    const newText = (event) => {\n        setQuesitonText(event.target.value);\n    }\n\n    const newTags = (event) => {\n        setQuesitonTags(event.target.value);\n    }\n\n    const deleteQuestion = async (e) => {\n        e.preventDefault();  \n        let questionId = currentNewQuestionClicked._id\n        let questionAnswers = currentNewQuestionClicked.answers\n        let questionComments = currentNewQuestionClicked.comments\n        try {\n            const response = await axios.post('http://localhost:8000/deletequestion', {questionId, questionAnswers, questionComments})\n            const updatedQuestions = response.data.questions;\n            const updatedAnswers = response.data.answers;\n            setQuestions(updatedQuestions)\n            setAnswers(updatedAnswers)\n        } catch (error) {\n            console.error('Error adding question client:', error);\n            return\n        }\n        setNewQuestionPage(false);\n        setHomePageVisible(true);\n    }\n\n    const updateQuestion = async (e) => {\n        e.preventDefault();\n        let title = questionTitle.toLowerCase();\n        let text = questionText.toLowerCase();\n        let tag = questionTags.toLowerCase();\n        let summary = questionSummary.toLowerCase();\n        var taglist = tag.split(\" \")\n        \n        // remove duplicates\n        taglist = taglist.filter((tag, index) => taglist.indexOf(tag) === index)\n\n        // remove empty strings\n        taglist = taglist.filter(item => item !== \"\")\n\n        // check if title is zero or over 100 characters\n        var error = 0\n\n        if ((title.length === 0) || (title.length > 50)) {\n            error += 1\n        }\n\n        if ((summary.length === 0 || (summary.length > 140))) {\n            error += 1\n        }\n\n        // check if the text box is empty\n        if (text.length === 0) {\n            error += 1\n        }\n        // obtain hypertext in the text\n        let hypertextarray = text.match(/(\\[.*?\\]\\(.*?\\))/g);\n\n        // if the hypertext exists\n        if (hypertextarray) {\n            for (let i = 0; i < hypertextarray.length; i++) {\n                let match = hypertextarray[i].match(/\\[(.*?)\\]\\((.*?)\\)/);\n                let bracketText = match[1]\n                let parentesesText = match[2];\n\n                if (bracketText.length === 0) {\n                    error += 1\n                }\n\n                //check for invaild links\n                if (parentesesText.length === 0) {\n                    error += 1\n                }\n\n                if (parentesesText.startsWith(\"http://\") || parentesesText.startsWith(\"https://\")) {\n                } else {\n                    error += 1\n                }\n            }\n        }\n\n        // check if the taglist is invalid\n        if (taglist.length > 5) {\n            error += 1\n        } else if (taglist.length === 0) {\n            error += 1\n        } else {\n            for (var i = 0; i < taglist.length; i++) {\n                if (taglist[i].length > 20) {\n                    error += 1\n                }\n            }\n        }\n\n        const invalidTags = taglist.filter(tag => !tags.some(existingTag => existingTag.name === tag));\n        if (invalidTags.length > 0) {\n            if (reputation < 50) {\n                error += 1\n            }\n        }\n\n        // if there are any errors return\n        if (error > 0) {\n            return\n        }\n\n        // edit the tags to remove user\n        let originalTags = currentNewQuestionClicked.tags\n        let arrayofTags = []\n\n        try {\n            const response = await axios.post('http://localhost:8000/updatetags', { originalTags, username })\n            arrayofTags = response.data\n        } catch (error) {\n            console.error('Error adding question client:', error);\n            return\n        }\n\n        console.log(\"this is reached\")\n\n        let listofnamemymodel = [];\n        let newTagIds = []\n\n        for (let i = 0; i < arrayofTags.length; i++) {\n            listofnamemymodel.push(arrayofTags[i].name)\n        }\n\n        let currentListofTags;\n\n        for (let i = 0; i < taglist.length; i++) {\n            if (listofnamemymodel.includes(taglist[i])) { // if the tag is already in the mymodel tag\n                newTagIds.push(arrayofTags[listofnamemymodel.indexOf(taglist[i])]._id) // push the id number\n                let tagId = arrayofTags[listofnamemymodel.indexOf(taglist[i])]._id\n                try {\n                    const response = await axios.post('http://localhost:8000/addtaguser', { tagId, username})\n                    const updatedTags = response.data;\n                    currentListofTags = updatedTags\n                    setTags(updatedTags)\n                } catch (error) {\n                    console.error('Error adding question client:', error);\n                    return\n                }\n            } else { // update the model and push the new id tag\n                let name = taglist[i];\n                try {\n                    const response = await axios.post('http://localhost:8000/addtag', { name, username })\n                    const updatedTags = response.data;\n                    currentListofTags = updatedTags\n                    setTags(updatedTags)\n                } catch (error) {\n                    console.error('Error adding question client:', error);\n                    return\n                }\n\n                console.log(\"tag after post question new array\", currentListofTags)\n\n                let newTag = currentListofTags[currentListofTags.length - 1]\n                newTagIds.push(newTag._id)\n\n                console.log(\"this is the id of the tag\", newTag._id)\n            }\n        }\n        // update the new question with tags\n        let questionId = currentNewQuestionClicked._id\n        \n        try {\n            const response = await axios.post('http://localhost:8000/updateQuestion', {questionId, title, text, newTagIds, summary})\n            const updatedQuestion = response.data;\n            setQuestions(updatedQuestion)\n        } catch (error) {\n            console.error('Error adding question client:', error);\n            return\n        }\n\n        setNewQuestionPage(false);\n        setHomePageVisible(true);\n    }\n\n    return (\n        <div className=\"grid-container\">\n            <div className=\"header-stack\">\n                <h1 style={{ width: '50%', fontSize: '50px', textAlign: 'center' }}> FakeStackOverflow </h1>\n                <h4 style={{ marginTop: '65px', marginRight: '20px' }}>Hello, {usernameDisplay}</h4>\n                {username !== \"Guest\" ? (\n                    <>\n                        <button className=\"hyperlinkButton\" onClick={handleProfilePage} style={{ marginRight: \"6px\" }}>Profile</button>\n                        <button className=\"hyperlinkButton\" onClick={toggleSignOut} style={{ width: '80px', marginRight: '100px' }}>Sign Out</button>\n                    </>\n                ) : (\n                    <button className=\"hyperlinkButton\" onClick={toggleSignOut} style={{ width: '100px', marginRight: '100px' }}>Sign in/Sign up</button>\n                )}\n                <SearchBar onSearch={toggleSearch} />\n            </div>\n            <div className=\"left-side-bar\">\n                <button className={\"hyperlinkButton\"} onClick={handleQuestionsClick}>Questions</button>\n                <br />\n                <button className={\"hyperlinkButton\"} onClick={handleTagsClick}>Tags</button>\n            </div>\n            <div className=\"right-side-box\">\n                <div style={{ height: \"17%\", display: \"flex\", borderBottom: \"solid\" }}>\n                    <div style={{ width: \"50%\", textAlign: \"center\" }}>\n                        <button style={{ margin: \"6%\" }} onClick={updateQuestion}>Update Question</button>\n                    </div>\n                    <div style={{ width: \"50%\", textAlign: \"center\" }}>\n                        <button style={{ margin: \"6%\" }} onClick={deleteQuestion}>Delete Question</button>\n                    </div>\n                </div>\n                <div style={{ margin: '20px', height: '60vh', maxHeight: '60vh', overflow: 'auto' }}>\n                    <div style={{ display: 'flex' }}>\n                        <div style={{ width: '75%' }}>\n                            <p style={{ marginLeft: '40px', color: 'red', fontFamily: 'Helvetica' }}>*Indicates mandatory fields</p>\n                        </div>\n                    </div>\n                    <form>\n                        <h1 style={{ fontSize: '25px', marginLeft: '70px', marginTop: '0px', marginBottom: '0px' }}> Question Title* </h1>\n                        <i style={{ fontSize: '15px', marginLeft: '70px' }}>Limit title to 50 characters or less</i><br />\n                        <input style={{ fontFamily: \"'Times New Roman', Times, serif\" }} id=\"questionTitle\" value={questionTitle} onChange={newTitle} />\n                        <ErrorTitle questionTitle={questionTitle} />\n\n                        <h1 style={{ fontSize: '25px', marginLeft: '70px', marginTop: '0px', marginBottom: '0px' }}> Question Summary* </h1>\n                        <i style={{ fontSize: '15px', marginLeft: '70px' }}>Limit title to 140 characters or less</i><br />\n                        <textarea style={{ fontFamily: \"'Times New Roman', Times, serif\" }} id=\"questionText\" value={questionSummary} onChange={newSummary}></textarea>\n                        <ErrorSummary questionSummary={questionSummary} />\n\n                        <h1 style={{ fontSize: '25px', marginLeft: '70px', marginTop: '0px', marginBottom: '0px' }}> Question Text* </h1>\n                        <i style={{ fontSize: '15px', marginLeft: '70px' }}>Add details</i><br />\n                        <textarea style={{ fontFamily: \"'Times New Roman', Times, serif\" }} id=\"questionText\" value={questionText} onChange={newText}></textarea>\n                        <ErrorText questionText={questionText} />\n\n                        <h1 style={{ fontSize: '25px', marginLeft: '70px', marginTop: '0px', marginBottom: '0px' }}> Tags* </h1>\n                        <i style={{ fontSize: '15px', marginLeft: '70px' }}>Add Keywords separated by whitespace</i><br />\n                        <input style={{ fontFamily: \"'Times New Roman', Times, serif\" }} id=\"tags\" value={questionTags} onChange={newTags} />\n                        <ErrorTags questionTags={questionTags} reputation={reputation} tags={tags} />\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst ErrorTitle = ({ questionTitle }) => {\n    if ((questionTitle.length === 0) || (questionTitle.length > 50)) {\n        return <p className=\"error\">Invalid Title Length</p>\n    }\n}\n\nconst ErrorSummary = ({ questionSummary }) => {\n    if ((questionSummary.length === 0) || (questionSummary.length > 140)) {\n        return <p className=\"error\">Invalid Summary Length</p>\n    }\n}\n\nconst ErrorText = ({ questionText }) => {\n    if (questionText.length === 0) {\n        return <p className=\"error\">Invalid Text Length</p>\n    }\n\n    // obtain hypertext in the text\n    let hypertextarray = questionText.match(/(\\[.*?\\]\\(.*?\\))/g);\n\n    // if the hypertext exists\n    if (hypertextarray) {\n        for (let i = 0; i < hypertextarray.length; i++) {\n            let match = hypertextarray[i].match(/\\[(.*?)\\]\\((.*?)\\)/);\n            let bracketText = match[1];\n            let parentesesText = match[2];\n\n            if (bracketText.length === 0) {\n                return <p className=\"error\"> Invalid Bracket Text</p>;\n            }\n\n            //check for invaild links\n            if (parentesesText.length === 0) {\n                return <p className=\"error\"> Invalid Link </p>;\n            }\n\n            if (parentesesText.startsWith(\"http://\") || parentesesText.startsWith(\"https://\")) {\n                return;\n            } else {\n                return <p className=\"error\"> Invalid Link </p>\n            }\n        }\n    }\n}\n\nconst ErrorTags = ({ questionTags, reputation, tags }) => {\n    let tag = questionTags.toLowerCase();\n    var taglist = tag.split(\" \");\n\n    // remove duplicates\n    taglist = taglist.filter((tag, index) => taglist.indexOf(tag) === index)\n\n    // remove empty strings\n    taglist = taglist.filter(item => item !== \"\")\n\n\n\n    if (taglist.length > 5) {\n        return <p className=\"error\">Too Many Tags</p>;\n    } else if (taglist.length === 0) {\n        return <p className=\"error\">There Must be at Least 1 Tag</p>;\n    } else {\n        for (let i = 0; i < taglist.length; i++) {\n            if (taglist[i].length > 20) {\n                return <p className=\"error\">Tag is Too Long</p>;\n            }\n        }\n    }\n\n    // Check if any tag added by the user doesn't exist in the 'tags' array\n    const invalidTags = taglist.filter(tag => !tags.some(existingTag => existingTag.name === tag));\n    if (invalidTags.length > 0) {\n        if (reputation < 50) {\n            return <p className=\"error\">Reputation below 50, can not add new tags</p>;\n        }\n    }\n}\n\nexport default NewQuestionPageContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}