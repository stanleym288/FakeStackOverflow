{"ast":null,"code":"var _jsxFileName = \"/Users/stanleymui/pa04-crispy/client/src/components/ansdisplayquestion.js\",\n  _s = $RefreshSig$();\nimport Dateandname from \"./askbydate\";\nimport React from \"react\";\nimport { useState, useRef } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnswerDisplayQuestion = ({\n  tags,\n  username,\n  reputation,\n  questions,\n  answers,\n  setQuestions,\n  setAnswers,\n  currentQuestionClicked,\n  handleAnsQuestion,\n  handleAskQuestion\n}) => {\n  _s();\n  // state for page stuff\n  const [currentPage, setCurrentPage] = useState(0);\n  const container = useRef(null);\n  const handleResetScroll = () => {\n    if (container.current) {\n      container.current.scrollTop = 0;\n    }\n  };\n  const [currentQuestionComment, setCurrentQuestionComment] = useState(\"\");\n  let arrayofQuestions = [...questions].sort(function (q1, q2) {\n    let q2Date = new Date(q2.asked_date_time);\n    let q1Date = new Date(q1.asked_date_time);\n    return q2Date - q1Date;\n  });\n  let arrayofAnswers = [...answers];\n\n  // obtain the question\n  var indexQuestion = 0;\n  for (let i = 0; i < arrayofQuestions.length; i++) {\n    if (arrayofQuestions[i]._id === currentQuestionClicked) {\n      indexQuestion = i;\n      break;\n    }\n  }\n\n  // obtainlistcomments\n  let arrayofQuestionComments = arrayofQuestions[indexQuestion].comments;\n\n  // update the number of views\n  let updatedViews = arrayofQuestions[indexQuestion].views;\n\n  // obtain the question title\n\n  let title = arrayofQuestions[indexQuestion].title;\n\n  // obtain the number of answers\n  let numberAnswers = arrayofQuestions[indexQuestion].answers.length;\n\n  // obtain the number of votes\n\n  let numberVotes = arrayofQuestions[indexQuestion].votes;\n\n  // obtain the number of comments\n\n  let numberComments = arrayofQuestions[indexQuestion].comments.length;\n\n  // obtain the current text\n  let questionText = arrayofQuestions[indexQuestion].text;\n\n  // obtain the answerid for that question\n  let answerId = arrayofQuestions[indexQuestion].answers;\n  let sortedAnswers = arrayofAnswers.sort(function (a1, a2) {\n    let a2Date = new Date(a2.ans_date_time);\n    let a1Date = new Date(a1.ans_date_time);\n    return a2Date - a1Date;\n  });\n  let answerIdSorted = sortedAnswers.filter(obj => answerId.includes(obj._id));\n  let length = answerIdSorted.length;\n  const incrementPage = () => {\n    let currentpage = currentPage + 1;\n    if (length === 0) {\n      return;\n    }\n    if (currentpage > Math.ceil(length / 5) - 1) {\n      setCurrentPage(0);\n      return;\n    }\n    setCurrentPage(currentPage + 1);\n  };\n  const decrementPage = () => {\n    if (currentPage === 0) {\n      return;\n    }\n    setCurrentPage(currentPage - 1);\n  };\n  const handleQuestionDownvote = async e => {\n    console.log(\"1\");\n    e.preventDefault();\n    console.log(\"2\");\n    try {\n      const questionName = arrayofQuestions[indexQuestion].asked_by;\n      console.log(\"3\");\n      await axios.post(\"http://localhost:8000/downvote\", {\n        name: questionName\n      });\n      console.log(\"4\");\n    } catch (error) {\n      console.error('Error downvoting reputation:', error.message);\n    }\n  };\n  const handleQuestionUpvote = async e => {\n    e.preventDefault();\n    try {\n      const questionName = arrayofQuestions[indexQuestion].asked_by;\n      await axios.post(\"http://localhost:8000/upvote\", {\n        name: questionName\n      });\n    } catch (error) {\n      console.error('Error upvoting reputation:', error.message);\n    }\n  };\n  const handleAddQuestionComment = async () => {\n    // if (reputation < 50) {\n    //     alert(\"You need at least 50 reputation to comment\");\n    //     return;\n    // }\n\n    if (currentQuestionComment.length > 140 || currentQuestionComment.length === 0) {\n      alert(\"Invalid comment length please try again.\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:8000/addcommentquestion', {\n        currentQuestionComment\n      });\n      let comment = response.data;\n      let questionId = currentQuestionClicked;\n      const updateQuestion = await axios.put('http://localhost:8000/question/updatecomments');\n    } catch (error) {}\n  };\n  const newQuestionComment = event => {\n    setCurrentQuestionComment(event.target.value);\n  };\n  const handleAddAnswerComment = async () => {};\n  answerIdSorted = answerIdSorted.slice(currentPage * 5, currentPage * 5 + 5);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerheader\",\n      children: [username !== \"Guest\" && reputation >= 50 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            marginTop: '10%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleQuestionUpvote,\n            className: \"voteButton\",\n            children: \"Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleQuestionDownvote,\n            className: \"voteButton\",\n            children: \"Down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '20%',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            paddingTop: '5px'\n          },\n          children: [numberAnswers, \" answers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            paddingTop: '5px'\n          },\n          children: [updatedViews, \" views\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            paddingTop: '5px'\n          },\n          children: [numberVotes, \" votes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            paddingTop: '5px'\n          },\n          children: [numberComments, \" comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '55%',\n          maxHeight: \"100%\",\n          overflow: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            paddingTop: '10px',\n            fontWeight: 'bold'\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            paddingTop: '10px',\n            marginRight: '100px'\n          },\n          children: /*#__PURE__*/_jsxDEV(TextHyperlinks, {\n            text: questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tags.map((tag, index) => arrayofQuestions[indexQuestion].tags.includes(tag._id) ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              backgroundColor: 'grey',\n              borderRadius: '5px',\n              display: 'inline-block',\n              margin: '5px',\n              padding: '5px 10px',\n              color: 'white'\n            },\n            children: tag.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            float: 'right',\n            margin: '30px'\n          },\n          className: \"button1\",\n          onClick: handleAskQuestion,\n          children: \"Ask Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: '90px',\n            paddingLeft: '40px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Dateandname, {\n            item: arrayofQuestions[indexQuestion]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '15vh',\n        maxHeight: '15vh',\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"70%\",\n          maxHeight: '70%',\n          overflow: \"auto\",\n          backgroundColor: \"yellow\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"30%\",\n          backgroundColor: \"green\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '6vh',\n        backgroundColor: \"blue\",\n        display: \"flex\",\n        borderBottom: \"dotted\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"30%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          style: {\n            width: \"80%\",\n            height: '5vh'\n          },\n          value: currentQuestionComment,\n          onChange: newQuestionComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginTop: '15%'\n          },\n          onClick: handleAddQuestionComment,\n          children: \"add comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: container,\n      style: {\n        height: '27vh',\n        maxHeight: '27vh',\n        overflow: \"auto\"\n      },\n      children: answerIdSorted.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displayquestionbox\",\n        children: [username !== \"Guest\" && reputation >= 50 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              marginTop: '10%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleQuestionUpvote,\n              className: \"voteButton\",\n              children: \"Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleQuestionDownvote,\n              className: \"voteButton\",\n              children: \"Down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '70%',\n            marginLeft: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(TextHyperlinks, {\n              text: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '30%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'green',\n              marginLeft: '177px',\n              marginBottom: '0px'\n            },\n            children: item.ans_by\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dateandnameanswer, {\n            item: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '25%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button1answer\",\n          onClick: handleAnsQuestion,\n          children: \"Answer Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"20%\",\n          height: \"50%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hyperlinkButton\",\n          onClick: () => {\n            decrementPage();\n            handleResetScroll();\n          },\n          children: \"prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"25%\",\n          height: \"50%\"\n        },\n        children: [\"Current Page \", currentPage + 1, \"/\", length === 0 ? 1 : Math.ceil(length / 5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"25%\",\n          height: \"50%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hyperlinkButton\",\n          onClick: () => {\n            incrementPage();\n            handleResetScroll();\n          },\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AnswerDisplayQuestion, \"8OZtqADsx+36NaEwO3F9lBhM+UE=\");\n_c = AnswerDisplayQuestion;\nconst Dateandnameanswer = ({\n  item\n}) => {\n  var date = new Date(item.ans_date_time);\n  var currentDate = new Date();\n  if ((currentDate - date) / (1000 * 60 * 60) < 24) {\n    var timeDiffSec = (currentDate - date) / 1000;\n    var timeRn = 0;\n    if (timeDiffSec < 60) {\n      timeRn = Math.floor(timeDiffSec);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: '175px',\n          marginTop: '0px'\n        },\n        children: [\"answered \", timeRn, \" seconds ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 20\n      }, this);\n    } else if (timeDiffSec < 3600) {\n      timeRn = Math.floor(timeDiffSec / 60);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: '175px',\n          marginTop: '0px'\n        },\n        children: [\"answered \", timeRn, \" minutes ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 20\n      }, this);\n    } else {\n      timeRn = Math.floor(timeDiffSec / 3600);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: '175px',\n          marginTop: '0px'\n        },\n        children: [\"answered \", timeRn, \" hours ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 20\n      }, this);\n    }\n  } else if (date.getFullYear() === currentDate.getFullYear()) {\n    let month = date.toLocaleDateString('en-US', {\n      month: 'short'\n    });\n    let day = date.getDate();\n    let hours = String(date.getHours()).padStart(2, '0');\n    let mins = String(date.getMinutes()).padStart(2, '0');\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginLeft: '175px',\n        marginTop: '0px'\n      },\n      children: [\"answered \", month, \" \", day, \" at \", hours, \":\", mins]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 16\n    }, this);\n  } else {\n    let month = date.toLocaleDateString('en-US', {\n      month: 'short'\n    });\n    let day = date.getDate();\n    let year = date.getFullYear();\n    let hours = String(date.getHours()).padStart(2, '0');\n    let mins = String(date.getMinutes()).padStart(2, '0');\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginLeft: '175px',\n        marginTop: '0px'\n      },\n      children: [\"answered \", month, \" \", day, \",  \", year, \" at \", hours, \":\", mins]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 16\n    }, this);\n  }\n};\n_c2 = Dateandnameanswer;\nconst TextHyperlinks = ({\n  text\n}) => {\n  let splitlinks = text.split(/(\\[.*?\\]\\(.*?\\))/g);\n  const newTextlinks = splitlinks.map((part, index) => {\n    let link = part.match(/\\[(.*?)\\]\\((.*?)\\)/);\n    if (link) {\n      let bracketText = link[1];\n      let parentesesText = link[2];\n      if (bracketText.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: parentesesText,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: parentesesText\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: parentesesText,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: bracketText\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 24\n        }, this);\n      }\n    } else {\n      return part;\n    }\n  });\n  return newTextlinks;\n};\n_c3 = TextHyperlinks;\nexport default AnswerDisplayQuestion;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AnswerDisplayQuestion\");\n$RefreshReg$(_c2, \"Dateandnameanswer\");\n$RefreshReg$(_c3, \"TextHyperlinks\");","map":{"version":3,"names":["Dateandname","React","useState","useRef","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AnswerDisplayQuestion","tags","username","reputation","questions","answers","setQuestions","setAnswers","currentQuestionClicked","handleAnsQuestion","handleAskQuestion","_s","currentPage","setCurrentPage","container","handleResetScroll","current","scrollTop","currentQuestionComment","setCurrentQuestionComment","arrayofQuestions","sort","q1","q2","q2Date","Date","asked_date_time","q1Date","arrayofAnswers","indexQuestion","i","length","_id","arrayofQuestionComments","comments","updatedViews","views","title","numberAnswers","numberVotes","votes","numberComments","questionText","text","answerId","sortedAnswers","a1","a2","a2Date","ans_date_time","a1Date","answerIdSorted","filter","obj","includes","incrementPage","currentpage","Math","ceil","decrementPage","handleQuestionDownvote","e","console","log","preventDefault","questionName","asked_by","post","name","error","message","handleQuestionUpvote","handleAddQuestionComment","alert","response","comment","data","questionId","updateQuestion","put","newQuestionComment","event","target","value","handleAddAnswerComment","slice","children","className","style","display","flexDirection","marginTop","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","textAlign","paddingTop","maxHeight","overflow","fontWeight","marginRight","TextHyperlinks","map","tag","index","backgroundColor","borderRadius","margin","padding","color","float","paddingLeft","item","height","borderBottom","onChange","ref","marginLeft","marginBottom","ans_by","Dateandnameanswer","_c","date","currentDate","timeDiffSec","timeRn","floor","getFullYear","month","toLocaleDateString","day","getDate","hours","String","getHours","padStart","mins","getMinutes","year","_c2","splitlinks","split","newTextlinks","part","link","match","bracketText","parentesesText","href","rel","_c3","$RefreshReg$"],"sources":["/Users/stanleymui/pa04-crispy/client/src/components/ansdisplayquestion.js"],"sourcesContent":["import Dateandname from \"./askbydate\";\nimport React from \"react\";\nimport { useState, useRef } from 'react';\nimport axios from \"axios\";\n\nconst AnswerDisplayQuestion = ({ tags, username, reputation, questions, answers, setQuestions, setAnswers, currentQuestionClicked, handleAnsQuestion, handleAskQuestion }) => {\n    // state for page stuff\n    const [currentPage, setCurrentPage] = useState(0);\n    const container = useRef(null);\n\n    const handleResetScroll = () => {\n        if (container.current) {\n            container.current.scrollTop = 0\n        }\n    }\n\n    const [currentQuestionComment, setCurrentQuestionComment] = useState(\"\")\n\n    let arrayofQuestions = [...questions].sort(function (q1, q2) {\n        let q2Date = new Date(q2.asked_date_time)\n        let q1Date = new Date(q1.asked_date_time)\n        return q2Date - q1Date\n    });\n    let arrayofAnswers = [...answers];\n\n    // obtain the question\n    var indexQuestion = 0;\n    for (let i = 0; i < arrayofQuestions.length; i++) {\n        if (arrayofQuestions[i]._id === currentQuestionClicked) {\n            indexQuestion = i;\n            break;\n        }\n    }\n\n    // obtainlistcomments\n    let arrayofQuestionComments = arrayofQuestions[indexQuestion].comments\n\n    // update the number of views\n    let updatedViews = (arrayofQuestions[indexQuestion].views);\n\n    // obtain the question title\n\n    let title = (arrayofQuestions[indexQuestion].title);\n\n    // obtain the number of answers\n    let numberAnswers = arrayofQuestions[indexQuestion].answers.length\n\n    // obtain the number of votes\n\n    let numberVotes = arrayofQuestions[indexQuestion].votes\n\n    // obtain the number of comments\n\n    let numberComments = arrayofQuestions[indexQuestion].comments.length\n\n    // obtain the current text\n    let questionText = arrayofQuestions[indexQuestion].text\n\n    // obtain the answerid for that question\n    let answerId = arrayofQuestions[indexQuestion].answers\n\n    let sortedAnswers = arrayofAnswers.sort(function (a1, a2) {\n        let a2Date = new Date(a2.ans_date_time)\n        let a1Date = new Date(a1.ans_date_time)\n        return a2Date - a1Date\n    });\n\n    let answerIdSorted = sortedAnswers.filter(obj => answerId.includes(obj._id));\n\n    let length = answerIdSorted.length\n\n    const incrementPage = () => {\n        let currentpage = currentPage + 1;\n\n        if (length === 0) {\n            return\n        }\n\n        if (currentpage > Math.ceil(length / 5) - 1) {\n            setCurrentPage(0);\n            return\n        }\n        setCurrentPage(currentPage + 1);\n    }\n\n    const decrementPage = () => {\n        if (currentPage === 0) {\n            return\n        }\n        setCurrentPage(currentPage - 1);\n    }\n\n    const handleQuestionDownvote = async (e) => {\n        console.log(\"1\");\n        e.preventDefault();\n        console.log(\"2\");\n        try {\n            const questionName = arrayofQuestions[indexQuestion].asked_by;\n            console.log(\"3\");\n            await axios.post(\"http://localhost:8000/downvote\", { name: questionName });\n            console.log(\"4\");\n        } catch (error) {\n            console.error('Error downvoting reputation:', error.message);\n        }\n    };\n\n    const handleQuestionUpvote = async (e) => {\n        e.preventDefault();\n        try {\n            const questionName = arrayofQuestions[indexQuestion].asked_by;\n            await axios.post(\"http://localhost:8000/upvote\", { name: questionName });\n        } catch (error) {\n            console.error('Error upvoting reputation:', error.message);\n        }\n    };\n\n    const handleAddQuestionComment = async () => {\n        // if (reputation < 50) {\n        //     alert(\"You need at least 50 reputation to comment\");\n        //     return;\n        // }\n\n        if (currentQuestionComment.length > 140 || currentQuestionComment.length === 0) {\n            alert(\"Invalid comment length please try again.\");\n            return;\n        }\n\n        try {\n            const response = await axios.post('http://localhost:8000/addcommentquestion', {currentQuestionComment})\n            let comment = response.data\n            let questionId = currentQuestionClicked\n            const updateQuestion = await axios.put('http://localhost:8000/question/updatecomments')\n\n\n        } catch (error) {\n\n        }\n    }\n\n    const newQuestionComment = (event) => {\n        setCurrentQuestionComment(event.target.value)\n    }\n\n    const handleAddAnswerComment = async () => {\n\n    }\n\n\n    answerIdSorted = answerIdSorted.slice(currentPage * 5, (currentPage * 5) + 5)\n\n    return (\n        <>\n            <div className=\"answerheader\">\n                {username !== \"Guest\" && reputation >= 50 && (\n                    <>\n                        <div style={{ display: 'flex', flexDirection: 'column', marginTop: '10%' }}>\n                            <button onClick={handleQuestionUpvote} className=\"voteButton\">Up</button>\n                            <button onClick={handleQuestionDownvote} className=\"voteButton\">Down</button>\n                        </div>\n                    </>\n                )}\n                <div style={{ width: '20%', textAlign: 'center' }}>\n                    <p style={{ paddingTop: '5px' }}>{numberAnswers} answers</p>\n                    <p style={{ paddingTop: '5px' }}>{updatedViews} views</p>\n                    <p style={{ paddingTop: '5px' }}>{numberVotes} votes</p>\n                    <p style={{ paddingTop: '5px' }}>{numberComments} comments</p>\n\n                </div>\n                <div style={{ width: '55%', maxHeight: \"100%\", overflow: \"auto\" }}>\n                    <p style={{ paddingTop: '10px', fontWeight: 'bold' }}>{title}</p>\n                    <p style={{ paddingTop: '10px', marginRight: '100px' }}><TextHyperlinks text={questionText} /></p>\n                    <p>\n                        {tags.map((tag, index) => (\n                            arrayofQuestions[indexQuestion].tags.includes(tag._id) ? (\n                                <span key={index} style={{ backgroundColor: 'grey', borderRadius: '5px', display: 'inline-block', margin: '5px', padding: '5px 10px', color: 'white' }}>\n                                    {tag.name}\n                                </span>\n                            ) : null\n                        ))}\n                    </p>\n                </div>\n                <div>\n                    <button style={{ float: 'right', margin: '30px' }} className=\"button1\" onClick={handleAskQuestion}>Ask Questions</button>\n                    <div style={{ paddingTop: '90px', paddingLeft: '40px' }}>\n                        <Dateandname item={arrayofQuestions[indexQuestion]} />\n                    </div>\n                </div>\n            </div>\n            <div style={{ height: '15vh', maxHeight: '15vh', display: \"flex\", flexDirection: \"column\" }}>\n                <div style={{ height: \"70%\", maxHeight: '70%', overflow: \"auto\", backgroundColor: \"yellow\" }}>\n\n                </div>\n                <div style={{ height: \"30%\", backgroundColor: \"green\" }}>\n\n                </div>\n            </div>\n            <div style={{ height: '6vh', backgroundColor: \"blue\", display: \"flex\", borderBottom: \"dotted\" }}>\n                <div style={{ width: \"30%\" }}>\n                    <textarea style={{ width: \"80%\", height: '5vh' }} value={currentQuestionComment} onChange={newQuestionComment}></textarea>\n                </div>\n                <div>\n                    <button style={{ marginTop: '15%'}} onClick={handleAddQuestionComment}>add comment</button>\n                </div>\n            </div>\n            <div ref={container} style={{ height: '27vh', maxHeight: '27vh', overflow: \"auto\" }}>\n                {answerIdSorted.map((item, index) => (\n                    <div className=\"displayquestionbox\" key={index}>\n                        {username !== \"Guest\" && reputation >= 50 && (\n                            <>\n                                <div style={{ display: 'flex', flexDirection: 'column', marginTop: '10%' }}>\n                                    <button onClick={handleQuestionUpvote} className=\"voteButton\">Up</button>\n                                    <button onClick={handleQuestionDownvote} className=\"voteButton\">Down</button>\n                                </div>\n                            </>\n                        )}\n                        <div style={{ width: '70%', marginLeft: '10px' }}>\n                            <p><TextHyperlinks text={item.text} /></p>\n                        </div>\n                        <div style={{ width: '30%' }}>\n                            <p style={{ color: 'green', marginLeft: '177px', marginBottom: '0px' }}>{item.ans_by}</p>\n                            <Dateandnameanswer item={item} />\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <div style={{ display: \"flex\" }}>\n                <div style={{ width: '25%' }}><button className=\"button1answer\" onClick={handleAnsQuestion}>Answer Question</button></div>\n                <div style={{ width: \"20%\", height: \"50%\" }}><button className=\"hyperlinkButton\" onClick={() => { decrementPage(); handleResetScroll(); }}>prev</button></div>\n                <div style={{ width: \"25%\", height: \"50%\" }}>Current Page {currentPage + 1}/{length === 0 ? 1 : Math.ceil(length / 5)}</div>\n                <div style={{ width: \"25%\", height: \"50%\" }}><button className=\"hyperlinkButton\" onClick={() => { incrementPage(); handleResetScroll(); }}>next</button></div>\n            </div>\n        </>\n    )\n}\n\nconst Dateandnameanswer = ({ item }) => {\n    var date = new Date(item.ans_date_time)\n    var currentDate = new Date();\n\n    if (((currentDate - date) / (1000 * 60 * 60)) < 24) {\n        var timeDiffSec = (currentDate - date) / 1000;\n        var timeRn = 0\n        if (timeDiffSec < 60) {\n            timeRn = Math.floor(timeDiffSec)\n            return <p style={{ marginLeft: '175px', marginTop: '0px' }}>answered {timeRn} seconds ago</p>\n        } else if (timeDiffSec < 3600) {\n            timeRn = Math.floor(timeDiffSec / 60)\n            return <p style={{ marginLeft: '175px', marginTop: '0px' }}>answered {timeRn} minutes ago</p>\n        } else {\n            timeRn = Math.floor(timeDiffSec / 3600)\n            return <p style={{ marginLeft: '175px', marginTop: '0px' }}>answered {timeRn} hours ago</p>\n        }\n    } else if (date.getFullYear() === currentDate.getFullYear()) {\n        let month = date.toLocaleDateString('en-US', { month: 'short' });\n        let day = date.getDate()\n        let hours = String(date.getHours()).padStart(2, '0');\n        let mins = String(date.getMinutes()).padStart(2, '0');\n        return <p style={{ marginLeft: '175px', marginTop: '0px' }}>answered {month} {day} at {hours}:{mins}</p>\n    } else {\n        let month = date.toLocaleDateString('en-US', { month: 'short' });\n        let day = date.getDate()\n        let year = date.getFullYear()\n        let hours = String(date.getHours()).padStart(2, '0');\n        let mins = String(date.getMinutes()).padStart(2, '0');\n        return <p style={{ marginLeft: '175px', marginTop: '0px' }}>answered {month} {day},  {year} at {hours}:{mins}</p>\n    }\n\n}\n\nconst TextHyperlinks = ({ text }) => {\n    let splitlinks = text.split(/(\\[.*?\\]\\(.*?\\))/g);\n    const newTextlinks = splitlinks.map((part, index) => {\n        let link = part.match(/\\[(.*?)\\]\\((.*?)\\)/);\n        if (link) {\n            let bracketText = link[1];\n            let parentesesText = link[2];\n\n            if (bracketText.length === 0) {\n                return <a key={index} href={parentesesText} target=\"_blank\" rel=\"noreferrer\">{parentesesText}</a>\n            } else {\n                return <a key={index} href={parentesesText} target=\"_blank\" rel=\"noreferrer\">{bracketText}</a>\n            }\n        } else {\n            return part\n        }\n    });\n    return newTextlinks\n}\n\nexport default AnswerDisplayQuestion;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}