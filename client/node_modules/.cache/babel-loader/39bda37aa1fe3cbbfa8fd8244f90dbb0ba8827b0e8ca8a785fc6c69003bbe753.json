{"ast":null,"code":"var _jsxFileName = \"/Users/stanleymui/pa04-crispy/client/src/components/tagpageprofile.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayUserTags = ({\n  tags,\n  questions,\n  setFilteredTag,\n  setHomePageVisible\n}) => {\n  _s();\n  let copytags = [...tags];\n  const [numTags, setNumTags] = useState(0);\n  const handleEditTag = tagName => {\n    console.log(\"im alive\");\n  };\n  useEffect(() => {\n    // Define printTags function inside the useEffect\n    const printTags = () => {\n      // Get the container element\n      var container = document.getElementById('tag-container');\n      // Iterate through the tags array\n      for (let i = 0; i < copytags.length; i++) {\n        const tag = copytags[i];\n        // Create a new div element for the tag\n        const tagElement = document.createElement('div');\n        tagElement.classList.add('tag');\n\n        // Create a new anchor element for the tag name\n        const tagLink = document.createElement('a');\n        tagLink.href = '#'; //can also be button\n        tagLink.textContent = tag.name; // Set the text content of the tag link with the tag name\n\n        // Attach click event listener to the tag name link\n        (function (tagName) {\n          tagLink.addEventListener('click', function (event) {\n            event.preventDefault(); // Prevent the default action of anchor click\n\n            // Retrieve all questions associated with the clicked tag name\n            var questionsWithTag = questions.filter(question => {\n              // Check if any of the question's tag IDs match the clicked tag _id\n              return question.copytags.some(tagId => {\n                // Find the tag object in the tags array using the tag ID\n                var tag = copytags.find(tag => tag._id === tagId);\n                // Check if the tag exists and its name matches\n                return tag && tag.name === tagName;\n              });\n            });\n            setFilteredTag(questionsWithTag);\n            setHomePageVisible(true);\n          });\n        })(tag.name);\n        const editLink = document.createElement('button');\n        editLink.textContent = \"Edit\";\n        editLink.addEventListener('click', function (event) {\n          event.preventDefault();\n          handleEditTag(tag.name);\n        });\n        const deleteLink = document.createElement('button');\n\n        // Count the number of questions with the current tag\n        let questionCount = 0;\n        questions.forEach(item => {\n          if (item.tags.includes(tag._id)) {\n            questionCount++;\n          }\n        });\n\n        // Create a new div element for the question count\n        var questionCountDiv = document.createElement('div');\n        questionCountDiv.textContent = `${questionCount} question${questionCount === 1 ? '' : 's'}`;\n\n        // Append the tag link to the tag element\n        tagElement.appendChild(tagLink);\n\n        // Append the tag element to the container\n        container.appendChild(tagElement);\n        tagElement.appendChild(questionCountDiv);\n        tagElement.appendChild(editLink);\n\n        // Add a line break after every third tag\n        if ((i + 1) % 3 === 0) {\n          container.appendChild(document.createElement('br'));\n        }\n      }\n    };\n\n    // Update the number of tags\n    setNumTags(copytags.length);\n    printTags();\n  }, [tags, questions, setFilteredTag, setHomePageVisible]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"num-tags\",\n      style: {\n        marginLeft: '60px',\n        marginTop: '60px'\n      },\n      children: [\" \", numTags, \" \", numTags === 1 ? 'tag' : 'tags']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"All-Tags\",\n      children: \"User Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"tag-container\",\n      style: {\n        maxHeight: \"73vh\",\n        overflow: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(DisplayUserTags, \"ykrGPYfuEghMDm9Lc1RmDwbRuIE=\");\n_c = DisplayUserTags;\nexport default DisplayUserTags;\nvar _c;\n$RefreshReg$(_c, \"DisplayUserTags\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","DisplayUserTags","tags","questions","setFilteredTag","setHomePageVisible","_s","copytags","numTags","setNumTags","handleEditTag","tagName","console","log","printTags","container","document","getElementById","i","length","tag","tagElement","createElement","classList","add","tagLink","href","textContent","name","addEventListener","event","preventDefault","questionsWithTag","filter","question","some","tagId","find","_id","editLink","deleteLink","questionCount","forEach","item","includes","questionCountDiv","appendChild","children","id","style","marginLeft","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","maxHeight","overflow","_c","$RefreshReg$"],"sources":["/Users/stanleymui/pa04-crispy/client/src/components/tagpageprofile.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst DisplayUserTags = ({tags, questions, setFilteredTag, setHomePageVisible}) => {\n    let copytags = [...tags]\n    const [numTags, setNumTags] = useState(0);\n    \n    const handleEditTag = (tagName) => {\n        console.log(\"im alive\")\n    }\n\n    useEffect(() => {\n        // Define printTags function inside the useEffect\n        const printTags = () => {\n            // Get the container element\n            var container = document.getElementById('tag-container');\n            // Iterate through the tags array\n            for (let i = 0; i < copytags.length; i++) {\n                const tag = copytags[i];\n                // Create a new div element for the tag\n                const tagElement = document.createElement('div');\n                tagElement.classList.add('tag');\n\n                // Create a new anchor element for the tag name\n                const tagLink = document.createElement('a');\n                tagLink.href = '#'; //can also be button\n                tagLink.textContent = tag.name; // Set the text content of the tag link with the tag name\n\n                // Attach click event listener to the tag name link\n                (function (tagName) {\n                    tagLink.addEventListener('click', function (event) {\n                        event.preventDefault(); // Prevent the default action of anchor click\n\n                        // Retrieve all questions associated with the clicked tag name\n                        var questionsWithTag = questions.filter(question => {\n                            // Check if any of the question's tag IDs match the clicked tag _id\n                            return question.copytags.some(tagId => {\n                                // Find the tag object in the tags array using the tag ID\n                                var tag = copytags.find(tag => tag._id === tagId);\n                                // Check if the tag exists and its name matches\n                                return tag && tag.name === tagName;\n                            });\n                        });\n                        setFilteredTag(questionsWithTag)\n                        setHomePageVisible(true)\n                    });\n                })(tag.name);\n\n                const editLink = document.createElement('button');\n                editLink.textContent = \"Edit\";\n                \n                editLink.addEventListener('click', function (event) {\n                    event.preventDefault();\n                    handleEditTag(tag.name);\n                });\n\n                const deleteLink = document.createElement('button')\n                \n\n\n\n                // Count the number of questions with the current tag\n                let questionCount = 0\n                questions.forEach(item => {\n                    if (item.tags.includes(tag._id)) {\n                        questionCount++;\n                    }\n                });\n\n                // Create a new div element for the question count\n                var questionCountDiv = document.createElement('div');\n                questionCountDiv.textContent = `${questionCount} question${questionCount === 1 ? '' : 's'}`;\n\n                // Append the tag link to the tag element\n                tagElement.appendChild(tagLink);\n\n                // Append the tag element to the container\n                container.appendChild(tagElement);\n                tagElement.appendChild(questionCountDiv);\n                tagElement.appendChild(editLink)\n\n                // Add a line break after every third tag\n                if ((i + 1) % 3 === 0) {\n                    container.appendChild(document.createElement('br'));\n                }\n            }\n        };\n\n        // Update the number of tags\n        setNumTags(copytags.length);\n        printTags();\n    }, [tags, questions, setFilteredTag, setHomePageVisible]);\n\n    return (\n        <div>\n            <p id=\"num-tags\" style={{ marginLeft: '60px', marginTop: '60px' }}> {numTags} {numTags === 1 ? 'tag' : 'tags'}</p >\n            <p id=\"All-Tags\">User Tags</p>\n            <br></br>\n            <div id=\"tag-container\" style={{ maxHeight: \"73vh\", overflow: \"auto\" }}></div>\n        </div>\n    )\n}\n\nexport default DisplayUserTags;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}