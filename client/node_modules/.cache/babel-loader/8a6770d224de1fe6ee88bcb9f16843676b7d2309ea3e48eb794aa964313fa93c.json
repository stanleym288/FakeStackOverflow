{"ast":null,"code":"var _jsxFileName = \"/Users/stanleymui/pa04-crispy/client/src/components/askquestions.js\",\n  _s = $RefreshSig$();\nimport SearchBar from './searchbar.js';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AskQuestionContent = ({\n  questions,\n  answers,\n  tags,\n  reputation,\n  username,\n  setTags,\n  setQuestions,\n  setFilteredTag,\n  setHomePageVisible,\n  setAskQuestionPageVisible,\n  setTagPageVisible,\n  setAnswerPageVisible,\n  setSearch,\n  setSearchString\n}) => {\n  _s();\n  const [questionTitle, setQuestionTitle] = useState('');\n  const [questionText, setQuesitonText] = useState(\"\");\n  const [questionTags, setQuesitonTags] = useState('');\n  // const [questionUsername, setQuestionUsername] = useState('');\n  const [questionSummary, setQuestionSummary] = useState('');\n  const [error, setError] = useState(\"\");\n  // const [flag, setFlag] = useState(0);\n\n  const newTitle = event => {\n    setQuestionTitle(event.target.value);\n  };\n  const newSummary = event => {\n    setQuestionSummary(event.target.value);\n  };\n  const newText = event => {\n    setQuesitonText(event.target.value);\n  };\n  const newTags = event => {\n    setQuesitonTags(event.target.value);\n  };\n  const newUsername = event => {\n    setQuestionUsername(event.target.value);\n  };\n  const handleQuestionsClick = () => {\n    setHomePageVisible(true);\n    setAnswerPageVisible(false);\n    setAskQuestionPageVisible(false);\n    setTagPageVisible(false);\n    setFilteredTag([]);\n  };\n  const handleTagsClick = () => {\n    setHomePageVisible(false);\n    setAnswerPageVisible(false);\n    setAskQuestionPageVisible(false);\n    setTagPageVisible(true);\n    setFilteredTag([]);\n  };\n  const toggleSearch = searchString => {\n    setSearchString(searchString);\n    setSearch(true);\n    setHomePageVisible(true);\n    setAnswerPageVisible(false);\n    setAskQuestionPageVisible(false);\n    setTagPageVisible(false);\n    setFilteredTag([]);\n  };\n  const TogglePostQuestion = async e => {\n    e.preventDefault();\n    let title = questionTitle.toLowerCase();\n    let text = questionText.toLowerCase();\n    let tag = questionTags.toLowerCase();\n    let summary = questionSummary.toLowerCase();\n    var taglist = tag.split(\" \");\n\n    // console.log(taglist)\n\n    // remove duplicates\n    taglist = taglist.filter((tag, index) => taglist.indexOf(tag) === index);\n\n    // check if title is zero or over 100 characters\n    var error = 0;\n    if (title.length === 0 || title.length > 50) {\n      error += 1;\n    }\n    if (summary.length === 0 || summary.length > 140) {\n      error += 1;\n    }\n\n    // check if the text box is empty\n    if (text.length === 0) {\n      error += 1;\n    }\n    // obtain hypertext in the text\n    let hypertextarray = text.match(/(\\[.*?\\]\\(.*?\\))/g);\n\n    // if the hypertext exists\n    if (hypertextarray) {\n      for (let i = 0; i < hypertextarray.length; i++) {\n        let match = hypertextarray[i].match(/\\[(.*?)\\]\\((.*?)\\)/);\n        let bracketText = match[1];\n        let parentesesText = match[2];\n        if (bracketText.length === 0) {\n          error += 1;\n        }\n\n        //check for invaild links\n        if (parentesesText.length === 0) {\n          error += 1;\n        }\n        if (parentesesText.startsWith(\"http://\") || parentesesText.startsWith(\"https://\")) {} else {\n          error += 1;\n        }\n      }\n    }\n    const invalidTags = taglist.filter(tag => !tags.some(existingTag => existingTag.name === tag));\n    if (invalidTags.length > 0) {\n      if (reputation == undefined || reputation < 50) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"Reputation below 50, can not add new tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 24\n        }, this);\n      }\n    }\n\n    // check if the taglist is invalid\n    if (taglist.length > 5) {\n      error += 1;\n    } else if (taglist[0] === \"\") {\n      error += 1;\n    } else if (flag != 0) {\n      error += 1;\n    } else {\n      for (var i = 0; i < taglist.length; i++) {\n        if (taglist[i].length > 20) {\n          error += 1;\n        }\n      }\n    }\n\n    // check if username is empty\n    if (username.length === 0) {\n      error += 1;\n    }\n\n    // if there are any errors return\n    if (error > 0) {\n      setFlag(0);\n      return;\n    }\n    let listofnamemymodel = [];\n    let newTagIds = [];\n    let arrayofTags = [...tags];\n    for (let i = 0; i < arrayofTags.length; i++) {\n      listofnamemymodel.push(arrayofTags[i].name);\n    }\n    let currentListofTags;\n    for (let i = 0; i < taglist.length; i++) {\n      if (listofnamemymodel.includes(taglist[i])) {\n        // if the tag is already in the mymodel tag\n        newTagIds.push(arrayofTags[listofnamemymodel.indexOf(taglist[i])]._id); // push the id number\n      } else {\n        // update the model and push the new id tag\n        let name = taglist[i];\n        try {\n          const response = await axios.post('http://localhost:8000/addtag', {\n            name\n          });\n          const updatedTags = response.data;\n          currentListofTags = updatedTags;\n          setTags(updatedTags);\n        } catch (error) {\n          console.error('Error adding question client:', error);\n          break;\n        }\n        console.log(\"tag after post question new array\", currentListofTags);\n        let newTag = currentListofTags[currentListofTags.length - 1];\n        newTagIds.push(newTag._id);\n        console.log(\"this is the id of the tag\", newTag._id);\n      }\n    }\n    let answers = [];\n    try {\n      const response = await axios.post('http://localhost:8000/addQuestion', {\n        title,\n        text,\n        newTagIds,\n        answers,\n        username,\n        summary\n      });\n      const updatedQuestion = response.data;\n      setQuestions(updatedQuestion);\n    } catch (error) {\n      console.error('Error adding question client:', error);\n      setError(\"Error: Cannot Add Question, Not Authorized Please Sign In\");\n      return;\n    }\n    setHomePageVisible(true);\n    setAnswerPageVisible(false);\n    setAskQuestionPageVisible(false);\n    setTagPageVisible(false);\n    setSearch(false);\n    setFilteredTag([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-stack\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          width: '85%',\n          fontSize: '50px',\n          textAlign: 'center'\n        },\n        children: \" FakeStackOverflow \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: toggleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hyperlinkButton\",\n        onClick: handleQuestionsClick,\n        children: \"Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hyperlinkButton\",\n        onClick: handleTagsClick,\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px',\n        height: '75vh',\n        maxHeight: '75vh',\n        overflow: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: '25px',\n            marginLeft: '70px',\n            marginTop: '0px',\n            marginBottom: '0px'\n          },\n          children: \" Question Title* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            fontSize: '15px',\n            marginLeft: '70px'\n          },\n          children: \"Limit title to 50 characters or less\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 113\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            fontFamily: \"'Times New Roman', Times, serif\"\n          },\n          id: \"questionTitle\",\n          value: questionTitle,\n          onChange: newTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorTitle, {\n          questionTitle: questionTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: '25px',\n            marginLeft: '70px',\n            marginTop: '0px',\n            marginBottom: '0px'\n          },\n          children: \" Question Summary* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            fontSize: '15px',\n            marginLeft: '70px'\n          },\n          children: \"Limit title to 140 characters or less\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 114\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          style: {\n            fontFamily: \"'Times New Roman', Times, serif\"\n          },\n          id: \"questionText\",\n          value: questionSummary,\n          onChange: newSummary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorSummary, {\n          questionSummary: questionSummary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: '25px',\n            marginLeft: '70px',\n            marginTop: '0px',\n            marginBottom: '0px'\n          },\n          children: \" Question Text* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            fontSize: '15px',\n            marginLeft: '70px'\n          },\n          children: \"Add details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 88\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          style: {\n            fontFamily: \"'Times New Roman', Times, serif\"\n          },\n          id: \"questionText\",\n          value: questionText,\n          onChange: newText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n          questionText: questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: '25px',\n            marginLeft: '70px',\n            marginTop: '0px',\n            marginBottom: '0px'\n          },\n          children: \" Tags* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            fontSize: '15px',\n            marginLeft: '70px'\n          },\n          children: \"Add Keywords separated by whitespace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 113\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            fontFamily: \"'Times New Roman', Times, serif\"\n          },\n          id: \"tags\",\n          value: questionTags,\n          onChange: newTags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorTags, {\n          questionTags: questionTags,\n          reputation: reputation,\n          tags: tags,\n          flag: flag,\n          setFlag: setFlag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '25%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"button1post\",\n              onClick: TogglePostQuestion,\n              children: \"Post Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '75%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0px',\n                color: 'red',\n                fontFamily: 'Helvetica'\n              },\n              children: \"*Indicates mandatory fields\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n};\n_s(AskQuestionContent, \"I4E7XHs+lCxu+pb1W6bry6BpuUU=\");\n_c = AskQuestionContent;\nconst ErrorTitle = ({\n  questionTitle\n}) => {\n  if (questionTitle.length === 0 || questionTitle.length > 50) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Invalid Title Length\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 16\n    }, this);\n  }\n};\n_c2 = ErrorTitle;\nconst ErrorSummary = ({\n  questionSummary\n}) => {\n  if (questionSummary.length === 0 || questionSummary.length > 140) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Invalid Summary Length\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 16\n    }, this);\n  }\n};\n_c3 = ErrorSummary;\nconst ErrorText = ({\n  questionText\n}) => {\n  if (questionText.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Invalid Text Length\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 16\n    }, this);\n  }\n\n  // obtain hypertext in the text\n  let hypertextarray = questionText.match(/(\\[.*?\\]\\(.*?\\))/g);\n\n  // if the hypertext exists\n  if (hypertextarray) {\n    for (let i = 0; i < hypertextarray.length; i++) {\n      let match = hypertextarray[i].match(/\\[(.*?)\\]\\((.*?)\\)/);\n      let bracketText = match[1];\n      let parentesesText = match[2];\n      if (bracketText.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \" Invalid Bracket Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 24\n        }, this);\n      }\n\n      //check for invaild links\n      if (parentesesText.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \" Invalid Link \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 24\n        }, this);\n      }\n      if (parentesesText.startsWith(\"http://\") || parentesesText.startsWith(\"https://\")) {\n        return;\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \" Invalid Link \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }\n};\n_c4 = ErrorText;\nconst ErrorTags = ({\n  questionTags,\n  reputation,\n  tags,\n  flag,\n  setFlag\n}) => {\n  let tag = questionTags.toLowerCase();\n  var taglist = tag.split(\" \");\n\n  // remove duplicates\n  taglist = taglist.filter((tag, index) => taglist.indexOf(tag) === index);\n\n  // Check if any tag added by the user doesn't exist in the 'tags' array\n  const invalidTags = taglist.filter(tag => !tags.some(existingTag => existingTag.name === tag));\n  if (invalidTags.length > 0) {\n    if (reputation == undefined || reputation < 50) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: \"Reputation below 50, can not add new tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  if (taglist.length > 5) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Too Many Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 16\n    }, this);\n  } else if (taglist[0] === \"\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"There Must be at Least 1 Tag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 16\n    }, this);\n  } else {\n    for (let i = 0; i < taglist.length; i++) {\n      if (taglist[i].length > 20) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"Tag is Too Long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }\n};\n_c5 = ErrorTags;\nconst ErrorUsername = ({\n  questionUsername\n}) => {\n  if (questionUsername.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Username is Empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 16\n    }, this);\n  }\n};\n_c6 = ErrorUsername;\nexport default AskQuestionContent;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"AskQuestionContent\");\n$RefreshReg$(_c2, \"ErrorTitle\");\n$RefreshReg$(_c3, \"ErrorSummary\");\n$RefreshReg$(_c4, \"ErrorText\");\n$RefreshReg$(_c5, \"ErrorTags\");\n$RefreshReg$(_c6, \"ErrorUsername\");","map":{"version":3,"names":["SearchBar","useState","axios","jsxDEV","_jsxDEV","AskQuestionContent","questions","answers","tags","reputation","username","setTags","setQuestions","setFilteredTag","setHomePageVisible","setAskQuestionPageVisible","setTagPageVisible","setAnswerPageVisible","setSearch","setSearchString","_s","questionTitle","setQuestionTitle","questionText","setQuesitonText","questionTags","setQuesitonTags","questionSummary","setQuestionSummary","error","setError","newTitle","event","target","value","newSummary","newText","newTags","newUsername","setQuestionUsername","handleQuestionsClick","handleTagsClick","toggleSearch","searchString","TogglePostQuestion","e","preventDefault","title","toLowerCase","text","tag","summary","taglist","split","filter","index","indexOf","length","hypertextarray","match","i","bracketText","parentesesText","startsWith","invalidTags","some","existingTag","name","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","flag","setFlag","listofnamemymodel","newTagIds","arrayofTags","push","currentListofTags","includes","_id","response","post","updatedTags","data","console","log","newTag","updatedQuestion","style","width","fontSize","textAlign","onSearch","onClick","margin","height","maxHeight","overflow","marginLeft","marginTop","marginBottom","fontFamily","id","onChange","ErrorTitle","ErrorSummary","ErrorText","ErrorTags","display","type","color","_c","_c2","_c3","_c4","_c5","ErrorUsername","questionUsername","_c6","$RefreshReg$"],"sources":["/Users/stanleymui/pa04-crispy/client/src/components/askquestions.js"],"sourcesContent":["import SearchBar from './searchbar.js';\nimport { useState } from 'react'\nimport axios from 'axios';\n\nconst AskQuestionContent = ({ questions, answers, tags, reputation, username, setTags, setQuestions, setFilteredTag, setHomePageVisible, setAskQuestionPageVisible, setTagPageVisible, setAnswerPageVisible, setSearch, setSearchString }) => {\n    const [questionTitle, setQuestionTitle] = useState('');\n    const [questionText, setQuesitonText] = useState(\"\");\n    const [questionTags, setQuesitonTags] = useState('');\n    // const [questionUsername, setQuestionUsername] = useState('');\n    const [questionSummary, setQuestionSummary] = useState('');\n    const [error, setError] = useState(\"\");\n    // const [flag, setFlag] = useState(0);\n\n    const newTitle = (event) => {\n        setQuestionTitle(event.target.value);\n    }\n\n    const newSummary = (event) => {\n        setQuestionSummary(event.target.value)\n    }\n\n    const newText = (event) => {\n        setQuesitonText(event.target.value);\n    }\n\n    const newTags = (event) => {\n        setQuesitonTags(event.target.value);\n    }\n\n    const newUsername = (event) => {\n        setQuestionUsername(event.target.value);\n    }\n\n    const handleQuestionsClick = () => {\n        setHomePageVisible(true);\n        setAnswerPageVisible(false);\n        setAskQuestionPageVisible(false);\n        setTagPageVisible(false);\n        setFilteredTag([]);\n    };\n\n    const handleTagsClick = () => {\n        setHomePageVisible(false);\n        setAnswerPageVisible(false);\n        setAskQuestionPageVisible(false);\n        setTagPageVisible(true);\n        setFilteredTag([]);\n    };\n\n    const toggleSearch = (searchString) => {\n        setSearchString(searchString);\n        setSearch(true);\n        setHomePageVisible(true);\n        setAnswerPageVisible(false);\n        setAskQuestionPageVisible(false);\n        setTagPageVisible(false);\n        setFilteredTag([]);\n    };\n\n    const TogglePostQuestion = async (e) => {\n        e.preventDefault();\n        let title = questionTitle.toLowerCase();\n        let text = questionText.toLowerCase();\n        let tag = questionTags.toLowerCase();\n        let summary = questionSummary.toLowerCase();\n        var taglist = tag.split(\" \")\n\n        // console.log(taglist)\n\n        // remove duplicates\n        taglist = taglist.filter((tag, index) => taglist.indexOf(tag) === index)\n\n        // check if title is zero or over 100 characters\n        var error = 0\n\n        if ((title.length === 0) || (title.length > 50)) {\n            error += 1\n        }\n\n        if ((summary.length === 0 || (summary.length > 140))) {\n            error += 1\n        }\n\n        // check if the text box is empty\n        if (text.length === 0) {\n            error += 1\n        }\n        // obtain hypertext in the text\n        let hypertextarray = text.match(/(\\[.*?\\]\\(.*?\\))/g);\n\n        // if the hypertext exists\n        if (hypertextarray) {\n            for (let i = 0; i < hypertextarray.length; i++) {\n                let match = hypertextarray[i].match(/\\[(.*?)\\]\\((.*?)\\)/);\n                let bracketText = match[1]\n                let parentesesText = match[2];\n\n                if (bracketText.length === 0) {\n                    error += 1\n                }\n\n                //check for invaild links\n                if (parentesesText.length === 0) {\n                    error += 1\n                }\n\n                if (parentesesText.startsWith(\"http://\") || parentesesText.startsWith(\"https://\")) {\n                } else {\n                    error += 1\n                }\n            }\n        }\n\n        const invalidTags = taglist.filter(tag => !tags.some(existingTag => existingTag.name === tag));\n        if (invalidTags.length > 0) {\n            if (reputation == undefined || reputation < 50) {\n                return <p className=\"error\">Reputation below 50, can not add new tags</p>;\n            }\n        }\n\n        // check if the taglist is invalid\n        if (taglist.length > 5) {\n            error += 1\n        } else if (taglist[0] === \"\") {\n            error += 1\n        } else if (flag != 0) {\n            error += 1\n        } else {\n            for (var i = 0; i < taglist.length; i++) {\n                if (taglist[i].length > 20) {\n                    error += 1\n                }\n            }\n        }\n\n        // check if username is empty\n        if (username.length === 0) {\n            error += 1\n        }\n\n        // if there are any errors return\n        if (error > 0) {\n            setFlag(0);\n            return\n        }\n\n        let listofnamemymodel = [];\n        let newTagIds = []\n        let arrayofTags = [...tags];\n\n        for (let i = 0; i < arrayofTags.length; i++) {\n            listofnamemymodel.push(arrayofTags[i].name)\n        }\n\n        let currentListofTags;\n\n        for (let i = 0; i < taglist.length; i++) {\n            if (listofnamemymodel.includes(taglist[i])) { // if the tag is already in the mymodel tag\n                newTagIds.push(arrayofTags[listofnamemymodel.indexOf(taglist[i])]._id) // push the id number\n            } else { // update the model and push the new id tag\n                let name = taglist[i];\n                try {\n                    const response = await axios.post('http://localhost:8000/addtag', { name })\n                    const updatedTags = response.data;\n                    currentListofTags = updatedTags\n                    setTags(updatedTags)\n                } catch (error) {\n                    console.error('Error adding question client:', error);\n                    break;\n                }\n\n                console.log(\"tag after post question new array\", currentListofTags)\n\n                let newTag = currentListofTags[currentListofTags.length - 1]\n                newTagIds.push(newTag._id)\n\n                console.log(\"this is the id of the tag\", newTag._id)\n            }\n        }\n\n        let answers = []\n\n        try {\n            const response = await axios.post('http://localhost:8000/addQuestion', { title, text, newTagIds, answers, username, summary })\n            const updatedQuestion = response.data;\n            setQuestions(updatedQuestion)\n        } catch (error) {\n            console.error('Error adding question client:', error);\n            setError(\"Error: Cannot Add Question, Not Authorized Please Sign In\")\n            return\n        }\n\n        setHomePageVisible(true)\n        setAnswerPageVisible(false)\n        setAskQuestionPageVisible(false)\n        setTagPageVisible(false)\n        setSearch(false)\n        setFilteredTag([])\n    }\n\n    return (\n        <div className=\"grid-container\">\n            <div className=\"header-stack\">\n                <h1 style={{ width: '85%', fontSize: '50px', textAlign: 'center' }}> FakeStackOverflow </h1>\n                <SearchBar onSearch={toggleSearch} />\n            </div>\n            <div className=\"left-side-bar\">\n                <button className={\"hyperlinkButton\"} onClick={handleQuestionsClick}>Questions</button>\n                <br />\n                <button className={\"hyperlinkButton\"} onClick={handleTagsClick}>Tags</button>\n            </div>\n            <div style={{ margin: '20px', height: '75vh', maxHeight: '75vh', overflow: 'auto' }}>\n                <form>\n                    <h1 style={{ fontSize: '25px', marginLeft: '70px', marginTop: '0px', marginBottom: '0px' }}> Question Title* </h1>\n                    <i style={{ fontSize: '15px', marginLeft: '70px' }}>Limit title to 50 characters or less</i><br />\n                    <input style={{ fontFamily: \"'Times New Roman', Times, serif\" }} id=\"questionTitle\" value={questionTitle} onChange={newTitle} />\n                    <ErrorTitle questionTitle={questionTitle} />\n\n                    <h1 style={{ fontSize: '25px', marginLeft: '70px', marginTop: '0px', marginBottom: '0px' }}> Question Summary* </h1>\n                    <i style={{ fontSize: '15px', marginLeft: '70px' }}>Limit title to 140 characters or less</i><br />\n                    <textarea style={{ fontFamily: \"'Times New Roman', Times, serif\" }} id=\"questionText\" value={questionSummary} onChange={newSummary}></textarea>\n                    <ErrorSummary questionSummary={questionSummary} />\n\n                    <h1 style={{ fontSize: '25px', marginLeft: '70px', marginTop: '0px', marginBottom: '0px' }}> Question Text* </h1>\n                    <i style={{ fontSize: '15px', marginLeft: '70px' }}>Add details</i><br />\n                    <textarea style={{ fontFamily: \"'Times New Roman', Times, serif\" }} id=\"questionText\" value={questionText} onChange={newText}></textarea>\n                    <ErrorText questionText={questionText} />\n\n                    <h1 style={{ fontSize: '25px', marginLeft: '70px', marginTop: '0px', marginBottom: '0px' }}> Tags* </h1>\n                    <i style={{ fontSize: '15px', marginLeft: '70px' }}>Add Keywords separated by whitespace</i><br />\n                    <input style={{ fontFamily: \"'Times New Roman', Times, serif\" }} id=\"tags\" value={questionTags} onChange={newTags} />\n                    <ErrorTags questionTags={questionTags} reputation={reputation} tags={tags} flag={flag} setFlag={setFlag} />\n\n                    <div style={{ display: 'flex' }}>\n                        <div style={{ width: '25%' }}>\n                            <p className=\"error\">{error}</p>\n                            <button type=\"button\" className=\"button1post\" onClick={TogglePostQuestion}>Post Question</button>\n                        </div>\n                        <div style={{ width: '75%' }}>\n                            <p style={{ margin: '0px', color: 'red', fontFamily: 'Helvetica' }}>*Indicates mandatory fields</p>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst ErrorTitle = ({ questionTitle }) => {\n    if ((questionTitle.length === 0) || (questionTitle.length > 50)) {\n        return <p className=\"error\">Invalid Title Length</p>\n    }\n}\n\nconst ErrorSummary = ({ questionSummary }) => {\n    if ((questionSummary.length === 0) || (questionSummary.length > 140)) {\n        return <p className=\"error\">Invalid Summary Length</p>\n    }\n}\n\nconst ErrorText = ({ questionText }) => {\n    if (questionText.length === 0) {\n        return <p className=\"error\">Invalid Text Length</p>\n    }\n\n    // obtain hypertext in the text\n    let hypertextarray = questionText.match(/(\\[.*?\\]\\(.*?\\))/g);\n\n    // if the hypertext exists\n    if (hypertextarray) {\n        for (let i = 0; i < hypertextarray.length; i++) {\n            let match = hypertextarray[i].match(/\\[(.*?)\\]\\((.*?)\\)/);\n            let bracketText = match[1];\n            let parentesesText = match[2];\n\n            if (bracketText.length === 0) {\n                return <p className=\"error\"> Invalid Bracket Text</p>;\n            }\n\n            //check for invaild links\n            if (parentesesText.length === 0) {\n                return <p className=\"error\"> Invalid Link </p>;\n            }\n\n            if (parentesesText.startsWith(\"http://\") || parentesesText.startsWith(\"https://\")) {\n                return;\n            } else {\n                return <p className=\"error\"> Invalid Link </p>\n            }\n        }\n    }\n}\n\nconst ErrorTags = ({ questionTags, reputation, tags, flag, setFlag }) => {\n    let tag = questionTags.toLowerCase();\n    var taglist = tag.split(\" \");\n\n    // remove duplicates\n    taglist = taglist.filter((tag, index) => taglist.indexOf(tag) === index)\n\n    // Check if any tag added by the user doesn't exist in the 'tags' array\n    const invalidTags = taglist.filter(tag => !tags.some(existingTag => existingTag.name === tag));\n    if (invalidTags.length > 0) {\n        if (reputation == undefined || reputation < 50) {\n            return <p className=\"error\">Reputation below 50, can not add new tags</p>;\n        }\n    }\n\n    if (taglist.length > 5) {\n        return <p className=\"error\">Too Many Tags</p>;\n    } else if (taglist[0] === \"\") {\n        return <p className=\"error\">There Must be at Least 1 Tag</p>;\n    } else {\n        for (let i = 0; i < taglist.length; i++) {\n            if (taglist[i].length > 20) {\n                return <p className=\"error\">Tag is Too Long</p>;\n            }\n        }\n    }\n}\n\nconst ErrorUsername = ({ questionUsername }) => {\n    if (questionUsername.length === 0) {\n        return <p className=\"error\">Username is Empty</p>\n    }\n}\n\nexport default AskQuestionContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}