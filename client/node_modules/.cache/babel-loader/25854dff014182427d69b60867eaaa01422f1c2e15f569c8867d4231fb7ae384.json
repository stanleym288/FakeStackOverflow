{"ast":null,"code":"var _jsxFileName = \"/Users/stanleymui/pa04-crispy/client/src/components/ansedit.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditAnswer = ({\n  setEditQuesitonClick,\n  currentAnswerClicked,\n  setAnswers\n}) => {\n  _s();\n  const [answerText, setAnswerText] = useState(currentAnswerClicked.text);\n  const newAnswerText = event => {\n    setAnswerText(event.target.value);\n  };\n  const toggleAnswerQuestion = async () => {\n    let text = answerText.toLowerCase();\n    setAnswerText('');\n\n    // check if title is zero or over 100 characters\n    var error = 0;\n\n    // check if the text box is empty\n    if (text.length === 0) {\n      error += 1;\n    }\n\n    // obtain hypertext in the text\n    let hypertextarray = text.match(/(\\[.*?\\]\\(.*?\\))/g);\n    // if the hypertext exists\n    if (hypertextarray) {\n      for (let i = 0; i < hypertextarray.length; i++) {\n        let match = hypertextarray[i].match(/\\[(.*?)\\]\\((.*?)\\)/);\n        let bracketText = match[1];\n        let parentesesText = match[2];\n        if (bracketText.length === 0) {\n          error += 1;\n        }\n\n        //check for invaild links\n        if (parentesesText.length === 0) {\n          error += 1;\n        }\n        if (parentesesText.startsWith(\"http://\") || parentesesText.startsWith(\"https://\")) {} else {\n          error += 1;\n        }\n      }\n    }\n\n    // if there are any errors return\n    if (error > 0) {\n      return;\n    }\n    let answerId = currentAnswerClicked._id;\n    try {\n      // edit answer\n      const response = await axios.post('http://localhost:8000/updateanswer', {\n        text,\n        answerId\n      });\n      setAnswers(response.data);\n    } catch (error) {\n      console.error('Error adding answer client:', error);\n      return;\n    }\n    setEditQuesitonClick(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '25px',\n          marginLeft: '70px',\n          marginBottom: '0px',\n          marginTop: '50px'\n        },\n        children: \" Edit Answer Text* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: {\n          fontFamily: 'Times New Roman, Times, serif',\n          marginLeft: '50px',\n          width: '600px',\n          height: '350px'\n        },\n        value: answerText,\n        onChange: newAnswerText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n        questionText: answerText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '30%'\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"button1post\",\n            onClick: toggleAnswerQuestion,\n            children: \"Update Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 52\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '50%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0px',\n              marginTop: '10px',\n              color: 'red',\n              fontFamily: 'Helvetica'\n            },\n            children: \"*Indicates mandatory fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(EditAnswer, \"AA+J0QbRBWD3W6hUGIw3ehpjiwI=\");\n_c = EditAnswer;\nconst ErrorText = ({\n  questionText\n}) => {\n  if (questionText.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      style: {\n        paddingLeft: '50px'\n      },\n      children: \"Invalid Text Length\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this);\n  }\n\n  // obtain hypertext in the text\n  let hypertextarray = questionText.match(/(\\[.*?\\]\\(.*?\\))/g);\n\n  // if the hypertext exists\n  if (hypertextarray) {\n    for (let i = 0; i < hypertextarray.length; i++) {\n      let match = hypertextarray[i].match(/\\[(.*?)\\]\\((.*?)\\)/);\n      let bracketText = match[1];\n      let parentesesText = match[2];\n      if (bracketText.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          style: {\n            paddingLeft: '50px'\n          },\n          children: \" Invalid Bracket Text \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 24\n        }, this);\n      }\n\n      //check for invaild links\n      if (parentesesText.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          style: {\n            paddingLeft: '50px'\n          },\n          children: \" Invalid Link \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 24\n        }, this);\n      }\n      if (parentesesText.startsWith(\"http://\") || parentesesText.startsWith(\"https://\")) {\n        return;\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          style: {\n            paddingLeft: '50px'\n          },\n          children: \" Invalid Link \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }\n};\n_c2 = ErrorText;\nexport default EditAnswer;\nvar _c, _c2;\n$RefreshReg$(_c, \"EditAnswer\");\n$RefreshReg$(_c2, \"ErrorText\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","EditAnswer","setEditQuesitonClick","currentAnswerClicked","setAnswers","_s","answerText","setAnswerText","text","newAnswerText","event","target","value","toggleAnswerQuestion","toLowerCase","error","length","hypertextarray","match","i","bracketText","parentesesText","startsWith","answerId","_id","response","post","data","console","children","style","fontSize","marginLeft","marginBottom","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","fontFamily","width","height","onChange","ErrorText","questionText","display","type","className","onClick","margin","color","_c","paddingLeft","_c2","$RefreshReg$"],"sources":["/Users/stanleymui/pa04-crispy/client/src/components/ansedit.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from 'react';\nimport axios from 'axios';\n\nconst EditAnswer = ({setEditQuesitonClick, currentAnswerClicked, setAnswers}) => {\n    const [answerText, setAnswerText] = useState(currentAnswerClicked.text);\n\n    const newAnswerText = (event) => {\n        setAnswerText(event.target.value);\n    }\n\n    const toggleAnswerQuestion = async () => {\n        let text = answerText.toLowerCase();\n        setAnswerText('');\n\n        // check if title is zero or over 100 characters\n        var error = 0\n\n        // check if the text box is empty\n        if (text.length === 0) {\n            error += 1\n        }\n\n        // obtain hypertext in the text\n        let hypertextarray = text.match(/(\\[.*?\\]\\(.*?\\))/g);\n        // if the hypertext exists\n        if (hypertextarray) {\n            for (let i = 0; i < hypertextarray.length; i++) {\n                let match = hypertextarray[i].match(/\\[(.*?)\\]\\((.*?)\\)/);\n                let bracketText = match[1]\n                let parentesesText = match[2];\n\n                if (bracketText.length === 0) {\n                    error += 1\n                }\n\n                //check for invaild links\n                if (parentesesText.length === 0) {\n                    error += 1\n                }\n\n                if (parentesesText.startsWith(\"http://\") || parentesesText.startsWith(\"https://\")) {\n                } else {\n                    error += 1\n                }\n            }\n        }\n\n\n        // if there are any errors return\n        if (error > 0) {\n            return\n        }\n\n        let answerId = currentAnswerClicked._id\n\n        try {\n            // edit answer\n            const response = await axios.post('http://localhost:8000/updateanswer', {text, answerId})\n            setAnswers(response.data)\n        } catch (error) {\n            console.error('Error adding answer client:', error);\n            return\n        }\n        setEditQuesitonClick(false)\n    }\n\n    return (\n        <>\n            <form>\n                <h1 style={{ fontSize: '25px', marginLeft: '70px', marginBottom: '0px', marginTop: '50px' }}> Edit Answer Text* </h1>\n                <textarea style={{ fontFamily: 'Times New Roman, Times, serif', marginLeft: '50px', width: '600px', height: '350px' }} value={answerText} onChange={newAnswerText}></textarea>\n                <ErrorText questionText={answerText} />\n                <br />\n                <div style={{ display: 'flex' }}>\n                    <div style={{ width: '30%' }}> <button type=\"button\" className=\"button1post\" onClick={toggleAnswerQuestion}>Update Answer</button> </div>\n                    <div style={{ width: '50%' }}>\n                        <p style={{ margin: '0px', marginTop: '10px', color: 'red', fontFamily: 'Helvetica' }}>*Indicates mandatory fields</p>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nconst ErrorText = ({ questionText }) => {\n    if (questionText.length === 0) {\n        return <p className=\"error\" style={{ paddingLeft: '50px' }}>Invalid Text Length</p>\n    }\n\n    // obtain hypertext in the text\n    let hypertextarray = questionText.match(/(\\[.*?\\]\\(.*?\\))/g);\n\n    // if the hypertext exists\n    if (hypertextarray) {\n        for (let i = 0; i < hypertextarray.length; i++) {\n            let match = hypertextarray[i].match(/\\[(.*?)\\]\\((.*?)\\)/);\n            let bracketText = match[1]\n            let parentesesText = match[2];\n\n            if (bracketText.length === 0) {\n                return <p className=\"error\" style={{ paddingLeft: '50px' }}> Invalid Bracket Text </p>;\n            }\n\n            //check for invaild links\n            if (parentesesText.length === 0) {\n                return <p className=\"error\" style={{ paddingLeft: '50px' }}> Invalid Link </p>;\n            }\n\n            if (parentesesText.startsWith(\"http://\") || parentesesText.startsWith(\"https://\")) {\n                return;\n            } else {\n                return <p className=\"error\" style={{ paddingLeft: '50px' }}> Invalid Link </p>\n            }\n        }\n    }\n}\n\n\nexport default EditAnswer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}